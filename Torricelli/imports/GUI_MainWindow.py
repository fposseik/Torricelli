# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI_MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1232, 820)
        font = QtGui.QFont()
        font.setPointSize(9)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_131 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_131.setObjectName("verticalLayout_131")
        self.horizontalLayout_189 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_189.setObjectName("horizontalLayout_189")
        self.label_39 = QtWidgets.QLabel(self.centralwidget)
        self.label_39.setObjectName("label_39")
        self.horizontalLayout_189.addWidget(self.label_39)
        self.LineEdit_CurrentWorkingDirectory = QtWidgets.QLineEdit(self.centralwidget)
        self.LineEdit_CurrentWorkingDirectory.setReadOnly(True)
        self.LineEdit_CurrentWorkingDirectory.setObjectName("LineEdit_CurrentWorkingDirectory")
        self.horizontalLayout_189.addWidget(self.LineEdit_CurrentWorkingDirectory)
        self.button_CurrentWorkingDirectory = QtWidgets.QPushButton(self.centralwidget)
        self.button_CurrentWorkingDirectory.setObjectName("button_CurrentWorkingDirectory")
        self.horizontalLayout_189.addWidget(self.button_CurrentWorkingDirectory)
        self.horizontalLayout_189.setStretch(1, 20)
        self.verticalLayout_131.addLayout(self.horizontalLayout_189)
        self.tab_Main = QtWidgets.QTabWidget(self.centralwidget)
        self.tab_Main.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tab_Main.sizePolicy().hasHeightForWidth())
        self.tab_Main.setSizePolicy(sizePolicy)
        self.tab_Main.setMinimumSize(QtCore.QSize(0, 20))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.tab_Main.setFont(font)
        self.tab_Main.setTabPosition(QtWidgets.QTabWidget.North)
        self.tab_Main.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tab_Main.setObjectName("tab_Main")
        self.tab_Ideal_Refl = QtWidgets.QWidget()
        self.tab_Ideal_Refl.setObjectName("tab_Ideal_Refl")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.tab_Ideal_Refl)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.label_DCM_a = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_DCM_a.setObjectName("label_DCM_a")
        self.gridLayout.addWidget(self.label_DCM_a, 7, 1, 1, 1)
        self.label_13 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_13.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_13.setObjectName("label_13")
        self.gridLayout.addWidget(self.label_13, 10, 0, 1, 1)
        self.label_FHbar_sample = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_FHbar_sample.setText("")
        self.label_FHbar_sample.setAlignment(QtCore.Qt.AlignCenter)
        self.label_FHbar_sample.setObjectName("label_FHbar_sample")
        self.gridLayout.addWidget(self.label_FHbar_sample, 19, 3, 1, 2)
        self.label_7 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_7.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_7.setObjectName("label_7")
        self.gridLayout.addWidget(self.label_7, 13, 0, 1, 1)
        self.radioButton_Sample_Compound = QtWidgets.QRadioButton(self.tab_Ideal_Refl)
        self.radioButton_Sample_Compound.setObjectName("radioButton_Sample_Compound")
        self.buttonGroup = QtWidgets.QButtonGroup(MainWindow)
        self.buttonGroup.setObjectName("buttonGroup")
        self.buttonGroup.addButton(self.radioButton_Sample_Compound)
        self.gridLayout.addWidget(self.radioButton_Sample_Compound, 3, 4, 1, 1)
        self.label_40 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_40.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_40.setObjectName("label_40")
        self.gridLayout.addWidget(self.label_40, 18, 0, 1, 1)
        self.label_42 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_42.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_42.setObjectName("label_42")
        self.gridLayout.addWidget(self.label_42, 15, 0, 2, 1)
        self.label_FH_sample = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_FH_sample.setText("")
        self.label_FH_sample.setAlignment(QtCore.Qt.AlignCenter)
        self.label_FH_sample.setObjectName("label_FH_sample")
        self.gridLayout.addWidget(self.label_FH_sample, 18, 3, 1, 2)
        self.label_8 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_8.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_8.setObjectName("label_8")
        self.gridLayout.addWidget(self.label_8, 5, 0, 1, 1)
        self.comboBox_DCM_DWMethod = QtWidgets.QComboBox(self.tab_Ideal_Refl)
        self.comboBox_DCM_DWMethod.setObjectName("comboBox_DCM_DWMethod")
        self.gridLayout.addWidget(self.comboBox_DCM_DWMethod, 12, 1, 1, 1)
        self.label_FHbar_DCM = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_FHbar_DCM.setText("")
        self.label_FHbar_DCM.setAlignment(QtCore.Qt.AlignCenter)
        self.label_FHbar_DCM.setObjectName("label_FHbar_DCM")
        self.gridLayout.addWidget(self.label_FHbar_DCM, 19, 1, 1, 1)
        self.label_Sample_Compound_Structure = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Sample_Compound_Structure.setObjectName("label_Sample_Compound_Structure")
        self.gridLayout.addWidget(self.label_Sample_Compound_Structure, 5, 4, 1, 1)
        self.comboBox_Sample_Elemental_Element = QtWidgets.QComboBox(self.tab_Ideal_Refl)
        self.comboBox_Sample_Elemental_Element.setObjectName("comboBox_Sample_Elemental_Element")
        self.gridLayout.addWidget(self.comboBox_Sample_Elemental_Element, 4, 3, 1, 1)
        self.label_DCM_Structure = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_DCM_Structure.setObjectName("label_DCM_Structure")
        self.gridLayout.addWidget(self.label_DCM_Structure, 5, 1, 1, 1)
        self.label_30 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_30.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_30.setObjectName("label_30")
        self.gridLayout.addWidget(self.label_30, 9, 0, 1, 1)
        self.pushButton_editDCM = QtWidgets.QPushButton(self.tab_Ideal_Refl)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.pushButton_editDCM.setFont(font)
        self.pushButton_editDCM.setObjectName("pushButton_editDCM")
        self.gridLayout.addWidget(self.pushButton_editDCM, 3, 1, 1, 1)
        self.label_F0_DCM = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_F0_DCM.setText("")
        self.label_F0_DCM.setAlignment(QtCore.Qt.AlignCenter)
        self.label_F0_DCM.setObjectName("label_F0_DCM")
        self.gridLayout.addWidget(self.label_F0_DCM, 17, 1, 1, 1)
        self.label_47 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_47.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_47.setObjectName("label_47")
        self.gridLayout.addWidget(self.label_47, 7, 0, 1, 1)
        self.comboBox_DCM_Element = QtWidgets.QComboBox(self.tab_Ideal_Refl)
        self.comboBox_DCM_Element.setEnabled(False)
        self.comboBox_DCM_Element.setObjectName("comboBox_DCM_Element")
        self.gridLayout.addWidget(self.comboBox_DCM_Element, 4, 1, 1, 1)
        self.label_DCM_c = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_DCM_c.setObjectName("label_DCM_c")
        self.gridLayout.addWidget(self.label_DCM_c, 9, 1, 1, 1)
        self.label_Elemental_b = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Elemental_b.setObjectName("label_Elemental_b")
        self.gridLayout.addWidget(self.label_Elemental_b, 8, 3, 1, 1)
        self.label_49 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_49.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_49.setObjectName("label_49")
        self.gridLayout.addWidget(self.label_49, 8, 0, 1, 1)
        self.label_dhkl_DCM = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_dhkl_DCM.setText("")
        self.label_dhkl_DCM.setAlignment(QtCore.Qt.AlignCenter)
        self.label_dhkl_DCM.setObjectName("label_dhkl_DCM")
        self.gridLayout.addWidget(self.label_dhkl_DCM, 20, 1, 1, 1)
        self.doubleSpinBox_Sample_Compound_Temperature = QtWidgets.QDoubleSpinBox(self.tab_Ideal_Refl)
        self.doubleSpinBox_Sample_Compound_Temperature.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_Sample_Compound_Temperature.setDecimals(1)
        self.doubleSpinBox_Sample_Compound_Temperature.setMaximum(5000.0)
        self.doubleSpinBox_Sample_Compound_Temperature.setProperty("value", 300.0)
        self.doubleSpinBox_Sample_Compound_Temperature.setObjectName("doubleSpinBox_Sample_Compound_Temperature")
        self.gridLayout.addWidget(self.doubleSpinBox_Sample_Compound_Temperature, 13, 4, 1, 1)
        self.label_F0_sample = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_F0_sample.setText("")
        self.label_F0_sample.setAlignment(QtCore.Qt.AlignCenter)
        self.label_F0_sample.setObjectName("label_F0_sample")
        self.gridLayout.addWidget(self.label_F0_sample, 17, 3, 1, 2)
        self.label_Compound_c = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Compound_c.setObjectName("label_Compound_c")
        self.gridLayout.addWidget(self.label_Compound_c, 9, 4, 1, 1)
        self.comboBox_Sample_Compound_DWMethod = QtWidgets.QComboBox(self.tab_Ideal_Refl)
        self.comboBox_Sample_Compound_DWMethod.setObjectName("comboBox_Sample_Compound_DWMethod")
        self.gridLayout.addWidget(self.comboBox_Sample_Compound_DWMethod, 12, 4, 1, 1)
        self.label_DCM_b = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_DCM_b.setObjectName("label_DCM_b")
        self.gridLayout.addWidget(self.label_DCM_b, 8, 1, 1, 1)
        self.label_38 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_38.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_38.setObjectName("label_38")
        self.gridLayout.addWidget(self.label_38, 19, 0, 1, 1)
        self.label_48 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_48.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_48.setObjectName("label_48")
        self.gridLayout.addWidget(self.label_48, 21, 0, 1, 1)
        self.doubleSpinBox_Sample_Elemental_Temperature = QtWidgets.QDoubleSpinBox(self.tab_Ideal_Refl)
        self.doubleSpinBox_Sample_Elemental_Temperature.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_Sample_Elemental_Temperature.setDecimals(1)
        self.doubleSpinBox_Sample_Elemental_Temperature.setMaximum(5000.0)
        self.doubleSpinBox_Sample_Elemental_Temperature.setProperty("value", 300.0)
        self.doubleSpinBox_Sample_Elemental_Temperature.setObjectName("doubleSpinBox_Sample_Elemental_Temperature")
        self.gridLayout.addWidget(self.doubleSpinBox_Sample_Elemental_Temperature, 13, 3, 1, 1)
        self.label_43 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_43.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_43.setObjectName("label_43")
        self.gridLayout.addWidget(self.label_43, 12, 0, 1, 1)
        self.label_DW_sample_B = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_DW_sample_B.setText("")
        self.label_DW_sample_B.setAlignment(QtCore.Qt.AlignCenter)
        self.label_DW_sample_B.setObjectName("label_DW_sample_B")
        self.gridLayout.addWidget(self.label_DW_sample_B, 16, 4, 1, 1)
        self.label_45 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_45.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_45.setObjectName("label_45")
        self.gridLayout.addWidget(self.label_45, 17, 0, 1, 1)
        self.label_EB_sample = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_EB_sample.setText("")
        self.label_EB_sample.setAlignment(QtCore.Qt.AlignCenter)
        self.label_EB_sample.setObjectName("label_EB_sample")
        self.gridLayout.addWidget(self.label_EB_sample, 21, 3, 1, 2)
        self.label_Elemental_c = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Elemental_c.setObjectName("label_Elemental_c")
        self.gridLayout.addWidget(self.label_Elemental_c, 9, 3, 1, 1)
        self.label = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 4, 0, 1, 1)
        self.radioButton_Sample_Elemental = QtWidgets.QRadioButton(self.tab_Ideal_Refl)
        self.radioButton_Sample_Elemental.setChecked(True)
        self.radioButton_Sample_Elemental.setObjectName("radioButton_Sample_Elemental")
        self.buttonGroup.addButton(self.radioButton_Sample_Elemental)
        self.gridLayout.addWidget(self.radioButton_Sample_Elemental, 3, 3, 1, 1)
        self.label_Compound_a = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Compound_a.setObjectName("label_Compound_a")
        self.gridLayout.addWidget(self.label_Compound_a, 7, 4, 1, 1)
        self.label_Compound_b = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Compound_b.setObjectName("label_Compound_b")
        self.gridLayout.addWidget(self.label_Compound_b, 8, 4, 1, 1)
        self.label_DW_sample_A = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_DW_sample_A.setText("")
        self.label_DW_sample_A.setAlignment(QtCore.Qt.AlignCenter)
        self.label_DW_sample_A.setObjectName("label_DW_sample_A")
        self.gridLayout.addWidget(self.label_DW_sample_A, 15, 4, 1, 1)
        self.label_Elemental_a = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Elemental_a.setObjectName("label_Elemental_a")
        self.gridLayout.addWidget(self.label_Elemental_a, 7, 3, 1, 1)
        self.label_CheckedValue = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_CheckedValue.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_CheckedValue.setObjectName("label_CheckedValue")
        self.gridLayout.addWidget(self.label_CheckedValue, 11, 0, 1, 1)
        self.label_DCM_CheckedValue = QtWidgets.QLabel(self.tab_Ideal_Refl)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label_DCM_CheckedValue.setFont(font)
        self.label_DCM_CheckedValue.setAlignment(QtCore.Qt.AlignCenter)
        self.label_DCM_CheckedValue.setObjectName("label_DCM_CheckedValue")
        self.gridLayout.addWidget(self.label_DCM_CheckedValue, 11, 1, 1, 1)
        self.label_Elemental_CheckedValue = QtWidgets.QLabel(self.tab_Ideal_Refl)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label_Elemental_CheckedValue.setFont(font)
        self.label_Elemental_CheckedValue.setAlignment(QtCore.Qt.AlignCenter)
        self.label_Elemental_CheckedValue.setObjectName("label_Elemental_CheckedValue")
        self.gridLayout.addWidget(self.label_Elemental_CheckedValue, 11, 3, 1, 1)
        self.label_Compound_CheckedValue = QtWidgets.QLabel(self.tab_Ideal_Refl)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label_Compound_CheckedValue.setFont(font)
        self.label_Compound_CheckedValue.setAlignment(QtCore.Qt.AlignCenter)
        self.label_Compound_CheckedValue.setObjectName("label_Compound_CheckedValue")
        self.gridLayout.addWidget(self.label_Compound_CheckedValue, 11, 4, 1, 1)
        self.comboBox_Sample_Compound_Element = QtWidgets.QComboBox(self.tab_Ideal_Refl)
        self.comboBox_Sample_Compound_Element.setObjectName("comboBox_Sample_Compound_Element")
        self.gridLayout.addWidget(self.comboBox_Sample_Compound_Element, 4, 4, 1, 1)
        self.label_50 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_50.setFont(font)
        self.label_50.setAlignment(QtCore.Qt.AlignCenter)
        self.label_50.setObjectName("label_50")
        self.gridLayout.addWidget(self.label_50, 0, 3, 1, 2)
        self.label_Sample_Elemental_Structure = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Sample_Elemental_Structure.setObjectName("label_Sample_Elemental_Structure")
        self.gridLayout.addWidget(self.label_Sample_Elemental_Structure, 5, 3, 1, 1)
        self.comboBox_Sample_Elemental_DWMethod = QtWidgets.QComboBox(self.tab_Ideal_Refl)
        self.comboBox_Sample_Elemental_DWMethod.setObjectName("comboBox_Sample_Elemental_DWMethod")
        self.gridLayout.addWidget(self.comboBox_Sample_Elemental_DWMethod, 12, 3, 1, 1)
        self.doubleSpinBox_DCM_Temperature = QtWidgets.QDoubleSpinBox(self.tab_Ideal_Refl)
        self.doubleSpinBox_DCM_Temperature.setEnabled(False)
        self.doubleSpinBox_DCM_Temperature.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_DCM_Temperature.setDecimals(1)
        self.doubleSpinBox_DCM_Temperature.setMaximum(5000.0)
        self.doubleSpinBox_DCM_Temperature.setProperty("value", 77.0)
        self.doubleSpinBox_DCM_Temperature.setObjectName("doubleSpinBox_DCM_Temperature")
        self.gridLayout.addWidget(self.doubleSpinBox_DCM_Temperature, 13, 1, 1, 1)
        self.label_FH_DCM = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_FH_DCM.setText("")
        self.label_FH_DCM.setAlignment(QtCore.Qt.AlignCenter)
        self.label_FH_DCM.setObjectName("label_FH_DCM")
        self.gridLayout.addWidget(self.label_FH_DCM, 18, 1, 1, 1)
        self.label_52 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_52.setFont(font)
        self.label_52.setAlignment(QtCore.Qt.AlignCenter)
        self.label_52.setObjectName("label_52")
        self.gridLayout.addWidget(self.label_52, 0, 1, 1, 1)
        self.label_DW_sample = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_DW_sample.setText("")
        self.label_DW_sample.setAlignment(QtCore.Qt.AlignCenter)
        self.label_DW_sample.setObjectName("label_DW_sample")
        self.gridLayout.addWidget(self.label_DW_sample, 15, 3, 2, 1)
        self.label_53 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_53.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_53.setObjectName("label_53")
        self.gridLayout.addWidget(self.label_53, 20, 0, 1, 1)
        self.label_dhkl_sample = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_dhkl_sample.setText("")
        self.label_dhkl_sample.setAlignment(QtCore.Qt.AlignCenter)
        self.label_dhkl_sample.setObjectName("label_dhkl_sample")
        self.gridLayout.addWidget(self.label_dhkl_sample, 20, 3, 1, 2)
        self.label_DW_DCM_A = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_DW_DCM_A.setText("")
        self.label_DW_DCM_A.setAlignment(QtCore.Qt.AlignCenter)
        self.label_DW_DCM_A.setObjectName("label_DW_DCM_A")
        self.gridLayout.addWidget(self.label_DW_DCM_A, 15, 1, 2, 1)
        self.label_55 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_55.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_55.setObjectName("label_55")
        self.gridLayout.addWidget(self.label_55, 6, 0, 1, 1)
        self.label_DCM_Type = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_DCM_Type.setObjectName("label_DCM_Type")
        self.gridLayout.addWidget(self.label_DCM_Type, 6, 1, 1, 1)
        self.label_Sample_Elemental_Type = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Sample_Elemental_Type.setObjectName("label_Sample_Elemental_Type")
        self.gridLayout.addWidget(self.label_Sample_Elemental_Type, 6, 3, 1, 1)
        self.label_Sample_Compound_Type = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Sample_Compound_Type.setObjectName("label_Sample_Compound_Type")
        self.gridLayout.addWidget(self.label_Sample_Compound_Type, 6, 4, 1, 1)
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.label_Elemental_alpha = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Elemental_alpha.setObjectName("label_Elemental_alpha")
        self.horizontalLayout_17.addWidget(self.label_Elemental_alpha)
        self.label_Elemental_beta = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Elemental_beta.setObjectName("label_Elemental_beta")
        self.horizontalLayout_17.addWidget(self.label_Elemental_beta)
        self.label_Elemental_gamma = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Elemental_gamma.setObjectName("label_Elemental_gamma")
        self.horizontalLayout_17.addWidget(self.label_Elemental_gamma)
        self.gridLayout.addLayout(self.horizontalLayout_17, 10, 3, 1, 1)
        self.horizontalLayout_20 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_20.setObjectName("horizontalLayout_20")
        self.doubleSpinBox_sample_miscut = QtWidgets.QDoubleSpinBox(self.tab_Ideal_Refl)
        self.doubleSpinBox_sample_miscut.setToolTip("")
        self.doubleSpinBox_sample_miscut.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_sample_miscut.setDecimals(2)
        self.doubleSpinBox_sample_miscut.setMinimum(-90.0)
        self.doubleSpinBox_sample_miscut.setMaximum(90.0)
        self.doubleSpinBox_sample_miscut.setSingleStep(0.1)
        self.doubleSpinBox_sample_miscut.setProperty("value", 0.0)
        self.doubleSpinBox_sample_miscut.setObjectName("doubleSpinBox_sample_miscut")
        self.horizontalLayout_20.addWidget(self.doubleSpinBox_sample_miscut)
        self.doubleSpinBox_b_cr = QtWidgets.QDoubleSpinBox(self.tab_Ideal_Refl)
        self.doubleSpinBox_b_cr.setEnabled(True)
        self.doubleSpinBox_b_cr.setToolTip("")
        self.doubleSpinBox_b_cr.setFrame(False)
        self.doubleSpinBox_b_cr.setAlignment(QtCore.Qt.AlignCenter)
        self.doubleSpinBox_b_cr.setReadOnly(True)
        self.doubleSpinBox_b_cr.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_b_cr.setDecimals(4)
        self.doubleSpinBox_b_cr.setMinimum(-99.0)
        self.doubleSpinBox_b_cr.setMaximum(0.0)
        self.doubleSpinBox_b_cr.setSingleStep(0.1)
        self.doubleSpinBox_b_cr.setProperty("value", -99.0)
        self.doubleSpinBox_b_cr.setObjectName("doubleSpinBox_b_cr")
        self.horizontalLayout_20.addWidget(self.doubleSpinBox_b_cr)
        self.line_8 = QtWidgets.QFrame(self.tab_Ideal_Refl)
        self.line_8.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_8.setObjectName("line_8")
        self.horizontalLayout_20.addWidget(self.line_8)
        self.doubleSpinBox_sample_deviation_NI = QtWidgets.QDoubleSpinBox(self.tab_Ideal_Refl)
        self.doubleSpinBox_sample_deviation_NI.setToolTip("")
        self.doubleSpinBox_sample_deviation_NI.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_sample_deviation_NI.setDecimals(2)
        self.doubleSpinBox_sample_deviation_NI.setMinimum(-90.0)
        self.doubleSpinBox_sample_deviation_NI.setMaximum(90.0)
        self.doubleSpinBox_sample_deviation_NI.setSingleStep(0.1)
        self.doubleSpinBox_sample_deviation_NI.setProperty("value", 3.5)
        self.doubleSpinBox_sample_deviation_NI.setObjectName("doubleSpinBox_sample_deviation_NI")
        self.horizontalLayout_20.addWidget(self.doubleSpinBox_sample_deviation_NI)
        self.doubleSpinBox_theta = QtWidgets.QDoubleSpinBox(self.tab_Ideal_Refl)
        self.doubleSpinBox_theta.setEnabled(True)
        self.doubleSpinBox_theta.setToolTip("")
        self.doubleSpinBox_theta.setFrame(False)
        self.doubleSpinBox_theta.setReadOnly(True)
        self.doubleSpinBox_theta.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_theta.setMinimum(-180.0)
        self.doubleSpinBox_theta.setMaximum(180.0)
        self.doubleSpinBox_theta.setProperty("value", -180.0)
        self.doubleSpinBox_theta.setObjectName("doubleSpinBox_theta")
        self.horizontalLayout_20.addWidget(self.doubleSpinBox_theta)
        self.gridLayout.addLayout(self.horizontalLayout_20, 2, 3, 1, 2)
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.spinBox_DCM_h = QtWidgets.QSpinBox(self.tab_Ideal_Refl)
        self.spinBox_DCM_h.setEnabled(False)
        self.spinBox_DCM_h.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.spinBox_DCM_h.setMinimum(-99)
        self.spinBox_DCM_h.setProperty("value", 1)
        self.spinBox_DCM_h.setObjectName("spinBox_DCM_h")
        self.horizontalLayout_12.addWidget(self.spinBox_DCM_h)
        self.spinBox_DCM_k = QtWidgets.QSpinBox(self.tab_Ideal_Refl)
        self.spinBox_DCM_k.setEnabled(False)
        self.spinBox_DCM_k.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.spinBox_DCM_k.setMinimum(-99)
        self.spinBox_DCM_k.setProperty("value", 1)
        self.spinBox_DCM_k.setObjectName("spinBox_DCM_k")
        self.horizontalLayout_12.addWidget(self.spinBox_DCM_k)
        self.label_DCM_i = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_DCM_i.setEnabled(False)
        self.label_DCM_i.setText("")
        self.label_DCM_i.setAlignment(QtCore.Qt.AlignCenter)
        self.label_DCM_i.setObjectName("label_DCM_i")
        self.horizontalLayout_12.addWidget(self.label_DCM_i)
        self.spinBox_DCM_l = QtWidgets.QSpinBox(self.tab_Ideal_Refl)
        self.spinBox_DCM_l.setEnabled(False)
        self.spinBox_DCM_l.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.spinBox_DCM_l.setMinimum(-99)
        self.spinBox_DCM_l.setProperty("value", 1)
        self.spinBox_DCM_l.setObjectName("spinBox_DCM_l")
        self.horizontalLayout_12.addWidget(self.spinBox_DCM_l)
        self.gridLayout.addLayout(self.horizontalLayout_12, 14, 1, 1, 1)
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.label_Compound_alpha = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Compound_alpha.setObjectName("label_Compound_alpha")
        self.horizontalLayout_18.addWidget(self.label_Compound_alpha)
        self.label_Compound_beta = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Compound_beta.setObjectName("label_Compound_beta")
        self.horizontalLayout_18.addWidget(self.label_Compound_beta)
        self.label_Compound_gamma = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Compound_gamma.setObjectName("label_Compound_gamma")
        self.horizontalLayout_18.addWidget(self.label_Compound_gamma)
        self.gridLayout.addLayout(self.horizontalLayout_18, 10, 4, 1, 1)
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.spinBox_Sample_Elemental_h = QtWidgets.QSpinBox(self.tab_Ideal_Refl)
        self.spinBox_Sample_Elemental_h.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.spinBox_Sample_Elemental_h.setMinimum(-99)
        self.spinBox_Sample_Elemental_h.setProperty("value", 1)
        self.spinBox_Sample_Elemental_h.setObjectName("spinBox_Sample_Elemental_h")
        self.horizontalLayout_14.addWidget(self.spinBox_Sample_Elemental_h)
        self.spinBox_Sample_Elemental_k = QtWidgets.QSpinBox(self.tab_Ideal_Refl)
        self.spinBox_Sample_Elemental_k.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.spinBox_Sample_Elemental_k.setMinimum(-99)
        self.spinBox_Sample_Elemental_k.setProperty("value", 1)
        self.spinBox_Sample_Elemental_k.setObjectName("spinBox_Sample_Elemental_k")
        self.horizontalLayout_14.addWidget(self.spinBox_Sample_Elemental_k)
        self.label_Sample_Elemental_i = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Sample_Elemental_i.setEnabled(True)
        self.label_Sample_Elemental_i.setText("")
        self.label_Sample_Elemental_i.setAlignment(QtCore.Qt.AlignCenter)
        self.label_Sample_Elemental_i.setObjectName("label_Sample_Elemental_i")
        self.horizontalLayout_14.addWidget(self.label_Sample_Elemental_i)
        self.spinBox_Sample_Elemental_l = QtWidgets.QSpinBox(self.tab_Ideal_Refl)
        self.spinBox_Sample_Elemental_l.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.spinBox_Sample_Elemental_l.setMinimum(-99)
        self.spinBox_Sample_Elemental_l.setProperty("value", 1)
        self.spinBox_Sample_Elemental_l.setObjectName("spinBox_Sample_Elemental_l")
        self.horizontalLayout_14.addWidget(self.spinBox_Sample_Elemental_l)
        self.gridLayout.addLayout(self.horizontalLayout_14, 14, 3, 1, 1)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.spinBox_Sample_Compound_h = QtWidgets.QSpinBox(self.tab_Ideal_Refl)
        self.spinBox_Sample_Compound_h.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.spinBox_Sample_Compound_h.setMinimum(-99)
        self.spinBox_Sample_Compound_h.setProperty("value", 0)
        self.spinBox_Sample_Compound_h.setObjectName("spinBox_Sample_Compound_h")
        self.horizontalLayout_15.addWidget(self.spinBox_Sample_Compound_h)
        self.spinBox_Sample_Compound_k = QtWidgets.QSpinBox(self.tab_Ideal_Refl)
        self.spinBox_Sample_Compound_k.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.spinBox_Sample_Compound_k.setMinimum(-99)
        self.spinBox_Sample_Compound_k.setProperty("value", 0)
        self.spinBox_Sample_Compound_k.setObjectName("spinBox_Sample_Compound_k")
        self.horizontalLayout_15.addWidget(self.spinBox_Sample_Compound_k)
        self.label_Sample_Compound_i = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_Sample_Compound_i.setEnabled(True)
        self.label_Sample_Compound_i.setText("")
        self.label_Sample_Compound_i.setAlignment(QtCore.Qt.AlignCenter)
        self.label_Sample_Compound_i.setObjectName("label_Sample_Compound_i")
        self.horizontalLayout_15.addWidget(self.label_Sample_Compound_i)
        self.spinBox_Sample_Compound_l = QtWidgets.QSpinBox(self.tab_Ideal_Refl)
        self.spinBox_Sample_Compound_l.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.spinBox_Sample_Compound_l.setMinimum(-99)
        self.spinBox_Sample_Compound_l.setProperty("value", 6)
        self.spinBox_Sample_Compound_l.setObjectName("spinBox_Sample_Compound_l")
        self.horizontalLayout_15.addWidget(self.spinBox_Sample_Compound_l)
        self.gridLayout.addLayout(self.horizontalLayout_15, 14, 4, 1, 1)
        self.label_57 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_57.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_57.setObjectName("label_57")
        self.gridLayout.addWidget(self.label_57, 14, 0, 1, 1)
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.label_DCM_alpha = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_DCM_alpha.setObjectName("label_DCM_alpha")
        self.horizontalLayout_16.addWidget(self.label_DCM_alpha)
        self.label_DCM_beta = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_DCM_beta.setObjectName("label_DCM_beta")
        self.horizontalLayout_16.addWidget(self.label_DCM_beta)
        self.label_DCM_gamma = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_DCM_gamma.setObjectName("label_DCM_gamma")
        self.horizontalLayout_16.addWidget(self.label_DCM_gamma)
        self.gridLayout.addLayout(self.horizontalLayout_16, 10, 1, 1, 1)
        self.horizontalLayout_22 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_22.setObjectName("horizontalLayout_22")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_22.addItem(spacerItem)
        self.radioButton_sigma_pol_light = QtWidgets.QRadioButton(self.tab_Ideal_Refl)
        self.radioButton_sigma_pol_light.setChecked(False)
        self.radioButton_sigma_pol_light.setObjectName("radioButton_sigma_pol_light")
        self.buttonGroup_2 = QtWidgets.QButtonGroup(MainWindow)
        self.buttonGroup_2.setObjectName("buttonGroup_2")
        self.buttonGroup_2.addButton(self.radioButton_sigma_pol_light)
        self.horizontalLayout_22.addWidget(self.radioButton_sigma_pol_light)
        self.radioButton_pi_pol_light = QtWidgets.QRadioButton(self.tab_Ideal_Refl)
        self.radioButton_pi_pol_light.setChecked(True)
        self.radioButton_pi_pol_light.setObjectName("radioButton_pi_pol_light")
        self.buttonGroup_2.addButton(self.radioButton_pi_pol_light)
        self.horizontalLayout_22.addWidget(self.radioButton_pi_pol_light)
        self.label_29 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_29.setObjectName("label_29")
        self.horizontalLayout_22.addWidget(self.label_29)
        self.doubleSpinBox_sample_P_Refl = QtWidgets.QDoubleSpinBox(self.tab_Ideal_Refl)
        self.doubleSpinBox_sample_P_Refl.setFrame(False)
        self.doubleSpinBox_sample_P_Refl.setReadOnly(True)
        self.doubleSpinBox_sample_P_Refl.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_sample_P_Refl.setPrefix("")
        self.doubleSpinBox_sample_P_Refl.setDecimals(4)
        self.doubleSpinBox_sample_P_Refl.setMinimum(-99.99)
        self.doubleSpinBox_sample_P_Refl.setSingleStep(0.1)
        self.doubleSpinBox_sample_P_Refl.setProperty("value", -99.0)
        self.doubleSpinBox_sample_P_Refl.setObjectName("doubleSpinBox_sample_P_Refl")
        self.horizontalLayout_22.addWidget(self.doubleSpinBox_sample_P_Refl)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_22.addItem(spacerItem1)
        self.gridLayout.addLayout(self.horizontalLayout_22, 1, 3, 1, 2)
        self.horizontalLayout_19 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_19.setObjectName("horizontalLayout_19")
        self.label_33 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_33.setAlignment(QtCore.Qt.AlignCenter)
        self.label_33.setObjectName("label_33")
        self.horizontalLayout_19.addWidget(self.label_33)
        self.doubleSpinBox_b_mo = QtWidgets.QDoubleSpinBox(self.tab_Ideal_Refl)
        self.doubleSpinBox_b_mo.setEnabled(False)
        self.doubleSpinBox_b_mo.setFrame(False)
        self.doubleSpinBox_b_mo.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_b_mo.setDecimals(4)
        self.doubleSpinBox_b_mo.setMinimum(-3.0)
        self.doubleSpinBox_b_mo.setMaximum(3.0)
        self.doubleSpinBox_b_mo.setSingleStep(0.1)
        self.doubleSpinBox_b_mo.setProperty("value", -1.0)
        self.doubleSpinBox_b_mo.setObjectName("doubleSpinBox_b_mo")
        self.horizontalLayout_19.addWidget(self.doubleSpinBox_b_mo)
        self.label_51 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_51.setObjectName("label_51")
        self.horizontalLayout_19.addWidget(self.label_51)
        self.gridLayout.addLayout(self.horizontalLayout_19, 2, 1, 1, 1)
        self.pushButton_calculateAllStructureFactors = QtWidgets.QPushButton(self.tab_Ideal_Refl)
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_calculateAllStructureFactors.setFont(font)
        self.pushButton_calculateAllStructureFactors.setObjectName("pushButton_calculateAllStructureFactors")
        self.gridLayout.addWidget(self.pushButton_calculateAllStructureFactors, 22, 1, 1, 4)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_theoReflRange = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_theoReflRange.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.label_theoReflRange.setObjectName("label_theoReflRange")
        self.verticalLayout.addWidget(self.label_theoReflRange)
        self.doubleSpinBox_theoReflRange = QtWidgets.QDoubleSpinBox(self.tab_Ideal_Refl)
        self.doubleSpinBox_theoReflRange.setWrapping(False)
        self.doubleSpinBox_theoReflRange.setFrame(True)
        self.doubleSpinBox_theoReflRange.setAlignment(QtCore.Qt.AlignCenter)
        self.doubleSpinBox_theoReflRange.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_theoReflRange.setDecimals(1)
        self.doubleSpinBox_theoReflRange.setMinimum(1.0)
        self.doubleSpinBox_theoReflRange.setSingleStep(0.5)
        self.doubleSpinBox_theoReflRange.setProperty("value", 10.0)
        self.doubleSpinBox_theoReflRange.setObjectName("doubleSpinBox_theoReflRange")
        self.verticalLayout.addWidget(self.doubleSpinBox_theoReflRange)
        self.gridLayout.addLayout(self.verticalLayout, 22, 0, 1, 1)
        self.line_4 = QtWidgets.QFrame(self.tab_Ideal_Refl)
        self.line_4.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.gridLayout.addWidget(self.line_4, 0, 2, 22, 1)
        self.label_31 = QtWidgets.QLabel(self.tab_Ideal_Refl)
        self.label_31.setAlignment(QtCore.Qt.AlignCenter)
        self.label_31.setObjectName("label_31")
        self.gridLayout.addWidget(self.label_31, 1, 1, 1, 1)
        self.gridLayout.setColumnStretch(0, 1)
        self.horizontalLayout_5.addLayout(self.gridLayout)
        self.verticalLayout_idealReflec = QtWidgets.QVBoxLayout()
        self.verticalLayout_idealReflec.setObjectName("verticalLayout_idealReflec")
        self.horizontalLayout_5.addLayout(self.verticalLayout_idealReflec)
        self.horizontalLayout_5.setStretch(0, 1)
        self.horizontalLayout_5.setStretch(1, 3)
        self.tab_Main.addTab(self.tab_Ideal_Refl, "")
        self.tab_Import = QtWidgets.QWidget()
        self.tab_Import.setObjectName("tab_Import")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.tab_Import)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.gridLayout_12 = QtWidgets.QGridLayout()
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.checkBox_AngularModeToggle = QtWidgets.QCheckBox(self.tab_Import)
        self.checkBox_AngularModeToggle.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.checkBox_AngularModeToggle.sizePolicy().hasHeightForWidth())
        self.checkBox_AngularModeToggle.setSizePolicy(sizePolicy)
        self.checkBox_AngularModeToggle.setToolTip("")
        self.checkBox_AngularModeToggle.setStatusTip("")
        self.checkBox_AngularModeToggle.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.checkBox_AngularModeToggle.setObjectName("checkBox_AngularModeToggle")
        self.gridLayout_12.addWidget(self.checkBox_AngularModeToggle, 6, 0, 1, 1)
        self.button_display_refl = QtWidgets.QPushButton(self.tab_Import)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_display_refl.sizePolicy().hasHeightForWidth())
        self.button_display_refl.setSizePolicy(sizePolicy)
        self.button_display_refl.setMinimumSize(QtCore.QSize(0, 0))
        self.button_display_refl.setObjectName("button_display_refl")
        self.gridLayout_12.addWidget(self.button_display_refl, 0, 5, 1, 1)
        self.button_refl_file = QtWidgets.QPushButton(self.tab_Import)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_refl_file.sizePolicy().hasHeightForWidth())
        self.button_refl_file.setSizePolicy(sizePolicy)
        self.button_refl_file.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.button_refl_file.setFont(font)
        self.button_refl_file.setObjectName("button_refl_file")
        self.gridLayout_12.addWidget(self.button_refl_file, 0, 4, 1, 1)
        self.checkBox_ignore_hvCheck = QtWidgets.QCheckBox(self.tab_Import)
        self.checkBox_ignore_hvCheck.setObjectName("checkBox_ignore_hvCheck")
        self.gridLayout_12.addWidget(self.checkBox_ignore_hvCheck, 3, 3, 1, 3)
        self.button_import = QtWidgets.QPushButton(self.tab_Import)
        self.button_import.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_import.sizePolicy().hasHeightForWidth())
        self.button_import.setSizePolicy(sizePolicy)
        self.button_import.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.button_import.setFont(font)
        self.button_import.setObjectName("button_import")
        self.gridLayout_12.addWidget(self.button_import, 2, 3, 1, 3)
        self.button_display_ey = QtWidgets.QPushButton(self.tab_Import)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_display_ey.sizePolicy().hasHeightForWidth())
        self.button_display_ey.setSizePolicy(sizePolicy)
        self.button_display_ey.setMinimumSize(QtCore.QSize(0, 0))
        self.button_display_ey.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.button_display_ey.setObjectName("button_display_ey")
        self.gridLayout_12.addWidget(self.button_display_ey, 1, 5, 1, 1)
        self.line = QtWidgets.QFrame(self.tab_Import)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_12.addWidget(self.line, 4, 0, 1, 6)
        self.button_ey_file = QtWidgets.QPushButton(self.tab_Import)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_ey_file.sizePolicy().hasHeightForWidth())
        self.button_ey_file.setSizePolicy(sizePolicy)
        self.button_ey_file.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.button_ey_file.setFont(font)
        self.button_ey_file.setObjectName("button_ey_file")
        self.gridLayout_12.addWidget(self.button_ey_file, 1, 4, 1, 1)
        self.display_window = QtWidgets.QTextEdit(self.tab_Import)
        self.display_window.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
        self.display_window.setReadOnly(True)
        self.display_window.setObjectName("display_window")
        self.gridLayout_12.addWidget(self.display_window, 9, 0, 1, 6)
        self.label_32 = QtWidgets.QLabel(self.tab_Import)
        self.label_32.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_32.setObjectName("label_32")
        self.gridLayout_12.addWidget(self.label_32, 0, 0, 1, 1)
        self.label_41 = QtWidgets.QLabel(self.tab_Import)
        self.label_41.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_41.setObjectName("label_41")
        self.gridLayout_12.addWidget(self.label_41, 1, 0, 1, 1)
        self.label_17 = QtWidgets.QLabel(self.tab_Import)
        self.label_17.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_17.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_17.setObjectName("label_17")
        self.gridLayout_12.addWidget(self.label_17, 3, 0, 1, 1)
        self.label_signal = QtWidgets.QLabel(self.tab_Import)
        self.label_signal.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_signal.setObjectName("label_signal")
        self.gridLayout_12.addWidget(self.label_signal, 2, 0, 1, 1)
        self.refl_name = QtWidgets.QLineEdit(self.tab_Import)
        self.refl_name.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.refl_name.sizePolicy().hasHeightForWidth())
        self.refl_name.setSizePolicy(sizePolicy)
        self.refl_name.setMinimumSize(QtCore.QSize(0, 0))
        self.refl_name.setReadOnly(True)
        self.refl_name.setObjectName("refl_name")
        self.gridLayout_12.addWidget(self.refl_name, 0, 1, 1, 3)
        self.ey_name = QtWidgets.QLineEdit(self.tab_Import)
        self.ey_name.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ey_name.sizePolicy().hasHeightForWidth())
        self.ey_name.setSizePolicy(sizePolicy)
        self.ey_name.setMinimumSize(QtCore.QSize(0, 0))
        self.ey_name.setReadOnly(True)
        self.ey_name.setObjectName("ey_name")
        self.gridLayout_12.addWidget(self.ey_name, 1, 1, 1, 3)
        self.signal_name = QtWidgets.QLineEdit(self.tab_Import)
        self.signal_name.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.signal_name.sizePolicy().hasHeightForWidth())
        self.signal_name.setSizePolicy(sizePolicy)
        self.signal_name.setMinimumSize(QtCore.QSize(0, 0))
        self.signal_name.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.signal_name.setObjectName("signal_name")
        self.gridLayout_12.addWidget(self.signal_name, 2, 1, 1, 2)
        self.column_name_label = QtWidgets.QLabel(self.tab_Import)
        self.column_name_label.setText("")
        self.column_name_label.setObjectName("column_name_label")
        self.gridLayout_12.addWidget(self.column_name_label, 3, 1, 1, 2)
        self.button_angles_file = QtWidgets.QPushButton(self.tab_Import)
        self.button_angles_file.setEnabled(False)
        self.button_angles_file.setObjectName("button_angles_file")
        self.gridLayout_12.addWidget(self.button_angles_file, 8, 4, 1, 1)
        self.button_display_angles = QtWidgets.QPushButton(self.tab_Import)
        self.button_display_angles.setEnabled(False)
        self.button_display_angles.setObjectName("button_display_angles")
        self.gridLayout_12.addWidget(self.button_display_angles, 8, 5, 1, 1)
        self.lineEdit_angles_path = QtWidgets.QLineEdit(self.tab_Import)
        self.lineEdit_angles_path.setEnabled(False)
        self.lineEdit_angles_path.setObjectName("lineEdit_angles_path")
        self.gridLayout_12.addWidget(self.lineEdit_angles_path, 8, 1, 1, 3)
        self.label_angles = QtWidgets.QLabel(self.tab_Import)
        self.label_angles.setEnabled(False)
        self.label_angles.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_angles.setObjectName("label_angles")
        self.gridLayout_12.addWidget(self.label_angles, 8, 0, 1, 1)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem2)
        self.label_select_slice = QtWidgets.QLabel(self.tab_Import)
        self.label_select_slice.setEnabled(False)
        self.label_select_slice.setObjectName("label_select_slice")
        self.horizontalLayout_7.addWidget(self.label_select_slice)
        self.spinBox_SelectedSlice = QtWidgets.QSpinBox(self.tab_Import)
        self.spinBox_SelectedSlice.setEnabled(False)
        self.spinBox_SelectedSlice.setSuffix("")
        self.spinBox_SelectedSlice.setMinimum(0)
        self.spinBox_SelectedSlice.setMaximum(999)
        self.spinBox_SelectedSlice.setProperty("value", 0)
        self.spinBox_SelectedSlice.setObjectName("spinBox_SelectedSlice")
        self.horizontalLayout_7.addWidget(self.spinBox_SelectedSlice)
        self.label_sliceAngle = QtWidgets.QLabel(self.tab_Import)
        self.label_sliceAngle.setEnabled(False)
        self.label_sliceAngle.setObjectName("label_sliceAngle")
        self.horizontalLayout_7.addWidget(self.label_sliceAngle)
        self.label_AngleOfSlice = QtWidgets.QLabel(self.tab_Import)
        self.label_AngleOfSlice.setEnabled(False)
        self.label_AngleOfSlice.setObjectName("label_AngleOfSlice")
        self.horizontalLayout_7.addWidget(self.label_AngleOfSlice)
        self.gridLayout_12.addLayout(self.horizontalLayout_7, 6, 3, 1, 3)
        self.label_angles_file_info = QtWidgets.QLabel(self.tab_Import)
        self.label_angles_file_info.setObjectName("label_angles_file_info")
        self.gridLayout_12.addWidget(self.label_angles_file_info, 6, 1, 1, 2)
        self.horizontalLayout_2.addLayout(self.gridLayout_12)
        self.verticalLayout_127 = QtWidgets.QVBoxLayout()
        self.verticalLayout_127.setObjectName("verticalLayout_127")
        self.horizontalLayout_raw_refl = QtWidgets.QHBoxLayout()
        self.horizontalLayout_raw_refl.setObjectName("horizontalLayout_raw_refl")
        self.verticalLayout_127.addLayout(self.horizontalLayout_raw_refl)
        self.horizontalLayout_raw_ey = QtWidgets.QHBoxLayout()
        self.horizontalLayout_raw_ey.setObjectName("horizontalLayout_raw_ey")
        self.verticalLayout_127.addLayout(self.horizontalLayout_raw_ey)
        self.horizontalLayout_2.addLayout(self.verticalLayout_127)
        self.horizontalLayout_2.setStretch(0, 1)
        self.horizontalLayout_2.setStretch(1, 1)
        self.tab_Main.addTab(self.tab_Import, "")
        self.tab_Fit_Refl = QtWidgets.QWidget()
        self.tab_Fit_Refl.setObjectName("tab_Fit_Refl")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.tab_Fit_Refl)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_Norm_fit = QtWidgets.QLabel(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_Norm_fit.setPalette(palette)
        self.label_Norm_fit.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_Norm_fit.setObjectName("label_Norm_fit")
        self.gridLayout_2.addWidget(self.label_Norm_fit, 2, 0, 1, 1)
        self.label_pm_1 = QtWidgets.QLabel(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_pm_1.setPalette(palette)
        self.label_pm_1.setAlignment(QtCore.Qt.AlignCenter)
        self.label_pm_1.setObjectName("label_pm_1")
        self.gridLayout_2.addWidget(self.label_pm_1, 1, 4, 1, 1)
        self.label_pm_2 = QtWidgets.QLabel(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_pm_2.setPalette(palette)
        self.label_pm_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_pm_2.setObjectName("label_pm_2")
        self.gridLayout_2.addWidget(self.label_pm_2, 2, 4, 1, 1)
        self.label_DR_fit = QtWidgets.QLabel(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_DR_fit.setPalette(palette)
        self.label_DR_fit.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_DR_fit.setObjectName("label_DR_fit")
        self.gridLayout_2.addWidget(self.label_DR_fit, 3, 0, 1, 1)
        self.label_pm_3 = QtWidgets.QLabel(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_pm_3.setPalette(palette)
        self.label_pm_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_pm_3.setObjectName("label_pm_3")
        self.gridLayout_2.addWidget(self.label_pm_3, 3, 4, 1, 1)
        self.label_DE_fit = QtWidgets.QLabel(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_DE_fit.setPalette(palette)
        self.label_DE_fit.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_DE_fit.setObjectName("label_DE_fit")
        self.gridLayout_2.addWidget(self.label_DE_fit, 4, 0, 1, 1)
        self.label_pm_4 = QtWidgets.QLabel(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_pm_4.setPalette(palette)
        self.label_pm_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_pm_4.setObjectName("label_pm_4")
        self.gridLayout_2.addWidget(self.label_pm_4, 4, 4, 1, 1)
        self.doubleSpinBox_ReflFit_sigma = QtWidgets.QDoubleSpinBox(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_ReflFit_sigma.setPalette(palette)
        self.doubleSpinBox_ReflFit_sigma.setFrame(False)
        self.doubleSpinBox_ReflFit_sigma.setReadOnly(True)
        self.doubleSpinBox_ReflFit_sigma.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ReflFit_sigma.setKeyboardTracking(False)
        self.doubleSpinBox_ReflFit_sigma.setDecimals(5)
        self.doubleSpinBox_ReflFit_sigma.setMinimum(-9999999.0)
        self.doubleSpinBox_ReflFit_sigma.setMaximum(9999999.0)
        self.doubleSpinBox_ReflFit_sigma.setSingleStep(0.0)
        self.doubleSpinBox_ReflFit_sigma.setObjectName("doubleSpinBox_ReflFit_sigma")
        self.gridLayout_2.addWidget(self.doubleSpinBox_ReflFit_sigma, 1, 3, 1, 1)
        self.doubleSpinBox_ReflFit_N = QtWidgets.QDoubleSpinBox(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_ReflFit_N.setPalette(palette)
        self.doubleSpinBox_ReflFit_N.setFrame(False)
        self.doubleSpinBox_ReflFit_N.setReadOnly(True)
        self.doubleSpinBox_ReflFit_N.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ReflFit_N.setKeyboardTracking(False)
        self.doubleSpinBox_ReflFit_N.setDecimals(5)
        self.doubleSpinBox_ReflFit_N.setMinimum(-9999999.0)
        self.doubleSpinBox_ReflFit_N.setMaximum(9999999.0)
        self.doubleSpinBox_ReflFit_N.setSingleStep(0.0)
        self.doubleSpinBox_ReflFit_N.setObjectName("doubleSpinBox_ReflFit_N")
        self.gridLayout_2.addWidget(self.doubleSpinBox_ReflFit_N, 2, 3, 1, 1)
        self.doubleSpinBox_ReflFit_dr = QtWidgets.QDoubleSpinBox(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_ReflFit_dr.setPalette(palette)
        self.doubleSpinBox_ReflFit_dr.setFrame(False)
        self.doubleSpinBox_ReflFit_dr.setReadOnly(True)
        self.doubleSpinBox_ReflFit_dr.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ReflFit_dr.setKeyboardTracking(False)
        self.doubleSpinBox_ReflFit_dr.setDecimals(5)
        self.doubleSpinBox_ReflFit_dr.setMinimum(-9999999.0)
        self.doubleSpinBox_ReflFit_dr.setMaximum(9999999.0)
        self.doubleSpinBox_ReflFit_dr.setSingleStep(0.0)
        self.doubleSpinBox_ReflFit_dr.setObjectName("doubleSpinBox_ReflFit_dr")
        self.gridLayout_2.addWidget(self.doubleSpinBox_ReflFit_dr, 3, 3, 1, 1)
        self.doubleSpinBox_ReflFit_de = QtWidgets.QDoubleSpinBox(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_ReflFit_de.setPalette(palette)
        self.doubleSpinBox_ReflFit_de.setFrame(False)
        self.doubleSpinBox_ReflFit_de.setReadOnly(True)
        self.doubleSpinBox_ReflFit_de.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ReflFit_de.setKeyboardTracking(False)
        self.doubleSpinBox_ReflFit_de.setDecimals(5)
        self.doubleSpinBox_ReflFit_de.setMinimum(-9999999.0)
        self.doubleSpinBox_ReflFit_de.setMaximum(9999999.0)
        self.doubleSpinBox_ReflFit_de.setSingleStep(0.0)
        self.doubleSpinBox_ReflFit_de.setObjectName("doubleSpinBox_ReflFit_de")
        self.gridLayout_2.addWidget(self.doubleSpinBox_ReflFit_de, 4, 3, 1, 1)
        self.doubleSpinBox_ReflDeviation_sigma = QtWidgets.QDoubleSpinBox(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_ReflDeviation_sigma.setPalette(palette)
        self.doubleSpinBox_ReflDeviation_sigma.setFrame(False)
        self.doubleSpinBox_ReflDeviation_sigma.setReadOnly(True)
        self.doubleSpinBox_ReflDeviation_sigma.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ReflDeviation_sigma.setKeyboardTracking(False)
        self.doubleSpinBox_ReflDeviation_sigma.setDecimals(5)
        self.doubleSpinBox_ReflDeviation_sigma.setMinimum(-9999999.0)
        self.doubleSpinBox_ReflDeviation_sigma.setMaximum(9999999.0)
        self.doubleSpinBox_ReflDeviation_sigma.setSingleStep(0.0)
        self.doubleSpinBox_ReflDeviation_sigma.setObjectName("doubleSpinBox_ReflDeviation_sigma")
        self.gridLayout_2.addWidget(self.doubleSpinBox_ReflDeviation_sigma, 1, 5, 1, 1)
        self.doubleSpinBox_ReflDeviation_N = QtWidgets.QDoubleSpinBox(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_ReflDeviation_N.setPalette(palette)
        self.doubleSpinBox_ReflDeviation_N.setFrame(False)
        self.doubleSpinBox_ReflDeviation_N.setReadOnly(True)
        self.doubleSpinBox_ReflDeviation_N.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ReflDeviation_N.setKeyboardTracking(False)
        self.doubleSpinBox_ReflDeviation_N.setDecimals(5)
        self.doubleSpinBox_ReflDeviation_N.setMinimum(-9999999.0)
        self.doubleSpinBox_ReflDeviation_N.setMaximum(9999999.0)
        self.doubleSpinBox_ReflDeviation_N.setSingleStep(0.0)
        self.doubleSpinBox_ReflDeviation_N.setObjectName("doubleSpinBox_ReflDeviation_N")
        self.gridLayout_2.addWidget(self.doubleSpinBox_ReflDeviation_N, 2, 5, 1, 1)
        self.doubleSpinBox_ReflDeviation_dr = QtWidgets.QDoubleSpinBox(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_ReflDeviation_dr.setPalette(palette)
        self.doubleSpinBox_ReflDeviation_dr.setFrame(False)
        self.doubleSpinBox_ReflDeviation_dr.setReadOnly(True)
        self.doubleSpinBox_ReflDeviation_dr.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ReflDeviation_dr.setKeyboardTracking(False)
        self.doubleSpinBox_ReflDeviation_dr.setDecimals(5)
        self.doubleSpinBox_ReflDeviation_dr.setMinimum(-9999999.0)
        self.doubleSpinBox_ReflDeviation_dr.setMaximum(9999999.0)
        self.doubleSpinBox_ReflDeviation_dr.setSingleStep(0.0)
        self.doubleSpinBox_ReflDeviation_dr.setObjectName("doubleSpinBox_ReflDeviation_dr")
        self.gridLayout_2.addWidget(self.doubleSpinBox_ReflDeviation_dr, 3, 5, 1, 1)
        self.doubleSpinBox_ReflDeviation_de = QtWidgets.QDoubleSpinBox(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_ReflDeviation_de.setPalette(palette)
        self.doubleSpinBox_ReflDeviation_de.setFrame(False)
        self.doubleSpinBox_ReflDeviation_de.setReadOnly(True)
        self.doubleSpinBox_ReflDeviation_de.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ReflDeviation_de.setKeyboardTracking(False)
        self.doubleSpinBox_ReflDeviation_de.setDecimals(5)
        self.doubleSpinBox_ReflDeviation_de.setMinimum(-9999999.0)
        self.doubleSpinBox_ReflDeviation_de.setMaximum(9999999.0)
        self.doubleSpinBox_ReflDeviation_de.setSingleStep(0.0)
        self.doubleSpinBox_ReflDeviation_de.setObjectName("doubleSpinBox_ReflDeviation_de")
        self.gridLayout_2.addWidget(self.doubleSpinBox_ReflDeviation_de, 4, 5, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.tab_Fit_Refl)
        self.label_5.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.label_5.setObjectName("label_5")
        self.gridLayout_2.addWidget(self.label_5, 0, 2, 1, 1)
        self.QTextEdit_FitResult_Refl = QtWidgets.QTextEdit(self.tab_Fit_Refl)
        self.QTextEdit_FitResult_Refl.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
        self.QTextEdit_FitResult_Refl.setReadOnly(True)
        self.QTextEdit_FitResult_Refl.setObjectName("QTextEdit_FitResult_Refl")
        self.gridLayout_2.addWidget(self.QTextEdit_FitResult_Refl, 7, 0, 1, 6)
        self.horizontalLayout_32 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_32.setObjectName("horizontalLayout_32")
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_32.addItem(spacerItem3)
        self.label_refl_chi = QtWidgets.QLabel(self.tab_Fit_Refl)
        self.label_refl_chi.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(20)
        sizePolicy.setVerticalStretch(40)
        sizePolicy.setHeightForWidth(self.label_refl_chi.sizePolicy().hasHeightForWidth())
        self.label_refl_chi.setSizePolicy(sizePolicy)
        self.label_refl_chi.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_refl_chi.setFont(font)
        self.label_refl_chi.setText("")
        self.label_refl_chi.setTextFormat(QtCore.Qt.AutoText)
        self.label_refl_chi.setScaledContents(False)
        self.label_refl_chi.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_refl_chi.setObjectName("label_refl_chi")
        self.horizontalLayout_32.addWidget(self.label_refl_chi)
        self.label_2 = QtWidgets.QLabel(self.tab_Fit_Refl)
        self.label_2.setEnabled(True)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_32.addWidget(self.label_2)
        self.doubleSpinBox_ReflFit_RedChiSquare = QtWidgets.QDoubleSpinBox(self.tab_Fit_Refl)
        self.doubleSpinBox_ReflFit_RedChiSquare.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.doubleSpinBox_ReflFit_RedChiSquare.sizePolicy().hasHeightForWidth())
        self.doubleSpinBox_ReflFit_RedChiSquare.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_ReflFit_RedChiSquare.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.doubleSpinBox_ReflFit_RedChiSquare.setFont(font)
        self.doubleSpinBox_ReflFit_RedChiSquare.setFrame(False)
        self.doubleSpinBox_ReflFit_RedChiSquare.setReadOnly(True)
        self.doubleSpinBox_ReflFit_RedChiSquare.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ReflFit_RedChiSquare.setKeyboardTracking(False)
        self.doubleSpinBox_ReflFit_RedChiSquare.setDecimals(5)
        self.doubleSpinBox_ReflFit_RedChiSquare.setMinimum(-999.0)
        self.doubleSpinBox_ReflFit_RedChiSquare.setMaximum(9999.0)
        self.doubleSpinBox_ReflFit_RedChiSquare.setSingleStep(0.0)
        self.doubleSpinBox_ReflFit_RedChiSquare.setObjectName("doubleSpinBox_ReflFit_RedChiSquare")
        self.horizontalLayout_32.addWidget(self.doubleSpinBox_ReflFit_RedChiSquare)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_32.addItem(spacerItem4)
        self.label_refl_RSquared = QtWidgets.QLabel(self.tab_Fit_Refl)
        font = QtGui.QFont()
        font.setFamily("Symbola")
        font.setPointSize(14)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.label_refl_RSquared.setFont(font)
        self.label_refl_RSquared.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_refl_RSquared.setObjectName("label_refl_RSquared")
        self.horizontalLayout_32.addWidget(self.label_refl_RSquared)
        self.label_22 = QtWidgets.QLabel(self.tab_Fit_Refl)
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(14)
        self.label_22.setFont(font)
        self.label_22.setAlignment(QtCore.Qt.AlignCenter)
        self.label_22.setObjectName("label_22")
        self.horizontalLayout_32.addWidget(self.label_22)
        self.doubleSpinBox_ReflFit_RSquared = QtWidgets.QDoubleSpinBox(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_ReflFit_RSquared.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.doubleSpinBox_ReflFit_RSquared.setFont(font)
        self.doubleSpinBox_ReflFit_RSquared.setFrame(False)
        self.doubleSpinBox_ReflFit_RSquared.setReadOnly(True)
        self.doubleSpinBox_ReflFit_RSquared.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ReflFit_RSquared.setDecimals(5)
        self.doubleSpinBox_ReflFit_RSquared.setMinimum(-1.0)
        self.doubleSpinBox_ReflFit_RSquared.setMaximum(1.0)
        self.doubleSpinBox_ReflFit_RSquared.setObjectName("doubleSpinBox_ReflFit_RSquared")
        self.horizontalLayout_32.addWidget(self.doubleSpinBox_ReflFit_RSquared)
        self.gridLayout_2.addLayout(self.horizontalLayout_32, 6, 0, 1, 6)
        self.horizontalLayout_24 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_24.setObjectName("horizontalLayout_24")
        self.label_sigma_fit = QtWidgets.QLabel(self.tab_Fit_Refl)
        self.label_sigma_fit.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_sigma_fit.setObjectName("label_sigma_fit")
        self.horizontalLayout_24.addWidget(self.label_sigma_fit)
        self.doubleSpinBox_ReflFit_InitVal_Sigma = QtWidgets.QDoubleSpinBox(self.tab_Fit_Refl)
        self.doubleSpinBox_ReflFit_InitVal_Sigma.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ReflFit_InitVal_Sigma.setKeyboardTracking(False)
        self.doubleSpinBox_ReflFit_InitVal_Sigma.setDecimals(3)
        self.doubleSpinBox_ReflFit_InitVal_Sigma.setMaximum(10.0)
        self.doubleSpinBox_ReflFit_InitVal_Sigma.setSingleStep(0.1)
        self.doubleSpinBox_ReflFit_InitVal_Sigma.setProperty("value", 0.1)
        self.doubleSpinBox_ReflFit_InitVal_Sigma.setObjectName("doubleSpinBox_ReflFit_InitVal_Sigma")
        self.horizontalLayout_24.addWidget(self.doubleSpinBox_ReflFit_InitVal_Sigma)
        self.gridLayout_2.addLayout(self.horizontalLayout_24, 1, 2, 1, 1)
        self.button_set_refl = QtWidgets.QPushButton(self.tab_Fit_Refl)
        self.button_set_refl.setEnabled(False)
        self.button_set_refl.setObjectName("button_set_refl")
        self.gridLayout_2.addWidget(self.button_set_refl, 0, 0, 1, 2)
        self.doubleSpinBox_ReflFit_InitVal_Norm = QtWidgets.QDoubleSpinBox(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_ReflFit_InitVal_Norm.setPalette(palette)
        self.doubleSpinBox_ReflFit_InitVal_Norm.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ReflFit_InitVal_Norm.setKeyboardTracking(False)
        self.doubleSpinBox_ReflFit_InitVal_Norm.setDecimals(3)
        self.doubleSpinBox_ReflFit_InitVal_Norm.setMaximum(9999999.0)
        self.doubleSpinBox_ReflFit_InitVal_Norm.setSingleStep(100.0)
        self.doubleSpinBox_ReflFit_InitVal_Norm.setObjectName("doubleSpinBox_ReflFit_InitVal_Norm")
        self.gridLayout_2.addWidget(self.doubleSpinBox_ReflFit_InitVal_Norm, 2, 1, 1, 2)
        self.doubleSpinBox_ReflFit_InitVal_Bgd = QtWidgets.QDoubleSpinBox(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_ReflFit_InitVal_Bgd.setPalette(palette)
        self.doubleSpinBox_ReflFit_InitVal_Bgd.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ReflFit_InitVal_Bgd.setKeyboardTracking(False)
        self.doubleSpinBox_ReflFit_InitVal_Bgd.setDecimals(3)
        self.doubleSpinBox_ReflFit_InitVal_Bgd.setMinimum(-999999.0)
        self.doubleSpinBox_ReflFit_InitVal_Bgd.setMaximum(9999999.0)
        self.doubleSpinBox_ReflFit_InitVal_Bgd.setSingleStep(10.0)
        self.doubleSpinBox_ReflFit_InitVal_Bgd.setObjectName("doubleSpinBox_ReflFit_InitVal_Bgd")
        self.gridLayout_2.addWidget(self.doubleSpinBox_ReflFit_InitVal_Bgd, 3, 1, 1, 2)
        self.doubleSpinBox_ReflFit_InitVal_DeltaE = QtWidgets.QDoubleSpinBox(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_ReflFit_InitVal_DeltaE.setPalette(palette)
        self.doubleSpinBox_ReflFit_InitVal_DeltaE.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ReflFit_InitVal_DeltaE.setKeyboardTracking(False)
        self.doubleSpinBox_ReflFit_InitVal_DeltaE.setDecimals(3)
        self.doubleSpinBox_ReflFit_InitVal_DeltaE.setMinimum(-999.0)
        self.doubleSpinBox_ReflFit_InitVal_DeltaE.setMaximum(999.0)
        self.doubleSpinBox_ReflFit_InitVal_DeltaE.setSingleStep(0.1)
        self.doubleSpinBox_ReflFit_InitVal_DeltaE.setObjectName("doubleSpinBox_ReflFit_InitVal_DeltaE")
        self.gridLayout_2.addWidget(self.doubleSpinBox_ReflFit_InitVal_DeltaE, 4, 1, 1, 2)
        self.label_estimate_3 = QtWidgets.QLabel(self.tab_Fit_Refl)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.label_estimate_3.sizePolicy().hasHeightForWidth())
        self.label_estimate_3.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_estimate_3.setPalette(palette)
        self.label_estimate_3.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.label_estimate_3.setObjectName("label_estimate_3")
        self.gridLayout_2.addWidget(self.label_estimate_3, 0, 3, 1, 3)
        self.button_fit_refl = QtWidgets.QPushButton(self.tab_Fit_Refl)
        self.button_fit_refl.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_fit_refl.sizePolicy().hasHeightForWidth())
        self.button_fit_refl.setSizePolicy(sizePolicy)
        self.button_fit_refl.setMinimumSize(QtCore.QSize(0, 0))
        self.button_fit_refl.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.button_fit_refl.setFont(font)
        self.button_fit_refl.setObjectName("button_fit_refl")
        self.gridLayout_2.addWidget(self.button_fit_refl, 5, 3, 1, 3)
        self.label_54 = QtWidgets.QLabel(self.tab_Fit_Refl)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_54.setPalette(palette)
        self.label_54.setObjectName("label_54")
        self.gridLayout_2.addWidget(self.label_54, 1, 0, 1, 2)
        self.horizontalLayout_10.addLayout(self.gridLayout_2)
        self.verticalLayout_fit_refl = QtWidgets.QVBoxLayout()
        self.verticalLayout_fit_refl.setObjectName("verticalLayout_fit_refl")
        self.horizontalLayout_10.addLayout(self.verticalLayout_fit_refl)
        self.horizontalLayout_10.setStretch(1, 1)
        self.tab_Main.addTab(self.tab_Fit_Refl, "")
        self.tab_Fit_EY = QtWidgets.QWidget()
        self.tab_Fit_EY.setObjectName("tab_Fit_EY")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.tab_Fit_EY)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.horizontalLayout_26 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_26.setObjectName("horizontalLayout_26")
        self.line_9 = QtWidgets.QFrame(self.tab_Fit_EY)
        self.line_9.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_9.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_9.setObjectName("line_9")
        self.horizontalLayout_26.addWidget(self.line_9)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_26.addItem(spacerItem5)
        self.label_pol = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_pol.setObjectName("label_pol")
        self.horizontalLayout_26.addWidget(self.label_pol)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_26.addItem(spacerItem6)
        self.label_theta_p_2 = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_theta_p_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_theta_p_2.setObjectName("label_theta_p_2")
        self.horizontalLayout_26.addWidget(self.label_theta_p_2)
        self.doubleSpinBox_ndp_phi = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        self.doubleSpinBox_ndp_phi.setFrame(True)
        self.doubleSpinBox_ndp_phi.setReadOnly(False)
        self.doubleSpinBox_ndp_phi.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ndp_phi.setKeyboardTracking(False)
        self.doubleSpinBox_ndp_phi.setDecimals(3)
        self.doubleSpinBox_ndp_phi.setMinimum(-180.0)
        self.doubleSpinBox_ndp_phi.setMaximum(180.0)
        self.doubleSpinBox_ndp_phi.setSingleStep(1.0)
        self.doubleSpinBox_ndp_phi.setProperty("value", 90.0)
        self.doubleSpinBox_ndp_phi.setObjectName("doubleSpinBox_ndp_phi")
        self.horizontalLayout_26.addWidget(self.doubleSpinBox_ndp_phi)
        self.label_4 = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_26.addWidget(self.label_4)
        self.doubleSpinBox_EYinit_Pe = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYinit_Pe.setPalette(palette)
        self.doubleSpinBox_EYinit_Pe.setFrame(False)
        self.doubleSpinBox_EYinit_Pe.setReadOnly(True)
        self.doubleSpinBox_EYinit_Pe.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYinit_Pe.setDecimals(5)
        self.doubleSpinBox_EYinit_Pe.setMinimum(-999.0)
        self.doubleSpinBox_EYinit_Pe.setMaximum(999.0)
        self.doubleSpinBox_EYinit_Pe.setProperty("value", 0.0)
        self.doubleSpinBox_EYinit_Pe.setObjectName("doubleSpinBox_EYinit_Pe")
        self.horizontalLayout_26.addWidget(self.doubleSpinBox_EYinit_Pe)
        self.gridLayout_3.addLayout(self.horizontalLayout_26, 3, 2, 1, 4)
        self.horizontalLayout_29 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_29.setObjectName("horizontalLayout_29")
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_29.addItem(spacerItem7)
        self.checkBox_ignore_MonteCarlo = QtWidgets.QCheckBox(self.tab_Fit_EY)
        self.checkBox_ignore_MonteCarlo.setObjectName("checkBox_ignore_MonteCarlo")
        self.horizontalLayout_29.addWidget(self.checkBox_ignore_MonteCarlo)
        self.gridLayout_3.addLayout(self.horizontalLayout_29, 13, 1, 1, 2)
        self.doubleSpinBox_stddev_gamma = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        self.doubleSpinBox_stddev_gamma.setEnabled(True)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_stddev_gamma.setPalette(palette)
        self.doubleSpinBox_stddev_gamma.setFrame(False)
        self.doubleSpinBox_stddev_gamma.setReadOnly(True)
        self.doubleSpinBox_stddev_gamma.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_stddev_gamma.setDecimals(5)
        self.doubleSpinBox_stddev_gamma.setMinimum(-999.0)
        self.doubleSpinBox_stddev_gamma.setMaximum(999.0)
        self.doubleSpinBox_stddev_gamma.setObjectName("doubleSpinBox_stddev_gamma")
        self.gridLayout_3.addWidget(self.doubleSpinBox_stddev_gamma, 9, 5, 1, 1)
        self.doubleSpinBox_fc = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_fc.setPalette(palette)
        self.doubleSpinBox_fc.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_fc.setKeyboardTracking(True)
        self.doubleSpinBox_fc.setDecimals(5)
        self.doubleSpinBox_fc.setMinimum(-1.0)
        self.doubleSpinBox_fc.setMaximum(2.0)
        self.doubleSpinBox_fc.setSingleStep(0.01)
        self.doubleSpinBox_fc.setProperty("value", 0.5)
        self.doubleSpinBox_fc.setObjectName("doubleSpinBox_fc")
        self.gridLayout_3.addWidget(self.doubleSpinBox_fc, 6, 1, 1, 1)
        self.horizontalSlider_manual_fc = QtWidgets.QSlider(self.tab_Fit_EY)
        self.horizontalSlider_manual_fc.setEnabled(True)
        self.horizontalSlider_manual_fc.setMinimum(-1000)
        self.horizontalSlider_manual_fc.setMaximum(2000)
        self.horizontalSlider_manual_fc.setSingleStep(10)
        self.horizontalSlider_manual_fc.setPageStep(100)
        self.horizontalSlider_manual_fc.setProperty("value", 500)
        self.horizontalSlider_manual_fc.setTracking(True)
        self.horizontalSlider_manual_fc.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_manual_fc.setObjectName("horizontalSlider_manual_fc")
        self.gridLayout_3.addWidget(self.horizontalSlider_manual_fc, 6, 2, 1, 1)
        self.label_pm_7 = QtWidgets.QLabel(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_pm_7.setPalette(palette)
        self.label_pm_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_pm_7.setObjectName("label_pm_7")
        self.gridLayout_3.addWidget(self.label_pm_7, 6, 4, 1, 1)
        self.label_estimate_2 = QtWidgets.QLabel(self.tab_Fit_EY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.label_estimate_2.sizePolicy().hasHeightForWidth())
        self.label_estimate_2.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_estimate_2.setPalette(palette)
        self.label_estimate_2.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.label_estimate_2.setObjectName("label_estimate_2")
        self.gridLayout_3.addWidget(self.label_estimate_2, 5, 3, 1, 3)
        self.horizontalLayout_30 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_30.setObjectName("horizontalLayout_30")
        self.checkBox_eyfit_fitgamma = QtWidgets.QCheckBox(self.tab_Fit_EY)
        self.checkBox_eyfit_fitgamma.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.checkBox_eyfit_fitgamma.setText("")
        self.checkBox_eyfit_fitgamma.setObjectName("checkBox_eyfit_fitgamma")
        self.horizontalLayout_30.addWidget(self.checkBox_eyfit_fitgamma)
        self.label_gamma = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_gamma.setObjectName("label_gamma")
        self.horizontalLayout_30.addWidget(self.label_gamma)
        self.horizontalLayout_30.setStretch(1, 10)
        self.gridLayout_3.addLayout(self.horizontalLayout_30, 9, 0, 1, 1)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.checkBox_eyfit_fitN = QtWidgets.QCheckBox(self.tab_Fit_EY)
        self.checkBox_eyfit_fitN.setText("")
        self.checkBox_eyfit_fitN.setChecked(True)
        self.checkBox_eyfit_fitN.setObjectName("checkBox_eyfit_fitN")
        self.horizontalLayout_11.addWidget(self.checkBox_eyfit_fitN)
        self.label_37 = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_37.setObjectName("label_37")
        self.horizontalLayout_11.addWidget(self.label_37)
        self.horizontalLayout_11.setStretch(1, 1)
        self.gridLayout_3.addLayout(self.horizontalLayout_11, 8, 0, 1, 1)
        self.pushButton_reset_initial_parameters = QtWidgets.QPushButton(self.tab_Fit_EY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_reset_initial_parameters.sizePolicy().hasHeightForWidth())
        self.pushButton_reset_initial_parameters.setSizePolicy(sizePolicy)
        self.pushButton_reset_initial_parameters.setObjectName("pushButton_reset_initial_parameters")
        self.gridLayout_3.addWidget(self.pushButton_reset_initial_parameters, 5, 0, 1, 1)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem8)
        self.label_ey_RSquared = QtWidgets.QLabel(self.tab_Fit_EY)
        font = QtGui.QFont()
        font.setFamily("Symbola")
        font.setPointSize(14)
        self.label_ey_RSquared.setFont(font)
        self.label_ey_RSquared.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_ey_RSquared.setObjectName("label_ey_RSquared")
        self.horizontalLayout_6.addWidget(self.label_ey_RSquared)
        self.label_15 = QtWidgets.QLabel(self.tab_Fit_EY)
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(14)
        self.label_15.setFont(font)
        self.label_15.setAlignment(QtCore.Qt.AlignCenter)
        self.label_15.setObjectName("label_15")
        self.horizontalLayout_6.addWidget(self.label_15)
        self.doubleSpinBox_eyFit_RSquared = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_eyFit_RSquared.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.doubleSpinBox_eyFit_RSquared.setFont(font)
        self.doubleSpinBox_eyFit_RSquared.setFrame(False)
        self.doubleSpinBox_eyFit_RSquared.setReadOnly(True)
        self.doubleSpinBox_eyFit_RSquared.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_eyFit_RSquared.setKeyboardTracking(False)
        self.doubleSpinBox_eyFit_RSquared.setDecimals(5)
        self.doubleSpinBox_eyFit_RSquared.setMinimum(-1.0)
        self.doubleSpinBox_eyFit_RSquared.setMaximum(1.0)
        self.doubleSpinBox_eyFit_RSquared.setObjectName("doubleSpinBox_eyFit_RSquared")
        self.horizontalLayout_6.addWidget(self.doubleSpinBox_eyFit_RSquared)
        self.label_fit_ey_chi = QtWidgets.QLabel(self.tab_Fit_EY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.label_fit_ey_chi.sizePolicy().hasHeightForWidth())
        self.label_fit_ey_chi.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_fit_ey_chi.setFont(font)
        self.label_fit_ey_chi.setText("")
        self.label_fit_ey_chi.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_fit_ey_chi.setObjectName("label_fit_ey_chi")
        self.horizontalLayout_6.addWidget(self.label_fit_ey_chi)
        self.label_16 = QtWidgets.QLabel(self.tab_Fit_EY)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_16.setFont(font)
        self.label_16.setAlignment(QtCore.Qt.AlignCenter)
        self.label_16.setObjectName("label_16")
        self.horizontalLayout_6.addWidget(self.label_16)
        self.doubleSpinBox_FitEY_RedChiSquare = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.doubleSpinBox_FitEY_RedChiSquare.sizePolicy().hasHeightForWidth())
        self.doubleSpinBox_FitEY_RedChiSquare.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_FitEY_RedChiSquare.setPalette(palette)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.doubleSpinBox_FitEY_RedChiSquare.setFont(font)
        self.doubleSpinBox_FitEY_RedChiSquare.setFrame(False)
        self.doubleSpinBox_FitEY_RedChiSquare.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.doubleSpinBox_FitEY_RedChiSquare.setReadOnly(True)
        self.doubleSpinBox_FitEY_RedChiSquare.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_FitEY_RedChiSquare.setKeyboardTracking(False)
        self.doubleSpinBox_FitEY_RedChiSquare.setDecimals(5)
        self.doubleSpinBox_FitEY_RedChiSquare.setMinimum(0.0)
        self.doubleSpinBox_FitEY_RedChiSquare.setMaximum(9999.0)
        self.doubleSpinBox_FitEY_RedChiSquare.setObjectName("doubleSpinBox_FitEY_RedChiSquare")
        self.horizontalLayout_6.addWidget(self.doubleSpinBox_FitEY_RedChiSquare)
        self.gridLayout_3.addLayout(self.horizontalLayout_6, 14, 3, 1, 3)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem9)
        self.checkBox_display_manual_EY = QtWidgets.QCheckBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        self.checkBox_display_manual_EY.setPalette(palette)
        self.checkBox_display_manual_EY.setChecked(False)
        self.checkBox_display_manual_EY.setObjectName("checkBox_display_manual_EY")
        self.horizontalLayout_3.addWidget(self.checkBox_display_manual_EY)
        self.label_initialChiSquared = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_initialChiSquared.setText("")
        self.label_initialChiSquared.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_initialChiSquared.setObjectName("label_initialChiSquared")
        self.horizontalLayout_3.addWidget(self.label_initialChiSquared)
        self.label_9 = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_3.addWidget(self.label_9)
        self.doubleSpinBox_manual_chisq = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        self.doubleSpinBox_manual_chisq.setEnabled(True)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_manual_chisq.setPalette(palette)
        self.doubleSpinBox_manual_chisq.setFrame(False)
        self.doubleSpinBox_manual_chisq.setReadOnly(True)
        self.doubleSpinBox_manual_chisq.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_manual_chisq.setKeyboardTracking(False)
        self.doubleSpinBox_manual_chisq.setDecimals(5)
        self.doubleSpinBox_manual_chisq.setMaximum(999999999.0)
        self.doubleSpinBox_manual_chisq.setObjectName("doubleSpinBox_manual_chisq")
        self.horizontalLayout_3.addWidget(self.doubleSpinBox_manual_chisq)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem10)
        self.gridLayout_3.addLayout(self.horizontalLayout_3, 14, 0, 1, 3)
        self.doubleSpinBox_stddev_ey_pc = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_stddev_ey_pc.setPalette(palette)
        self.doubleSpinBox_stddev_ey_pc.setFrame(False)
        self.doubleSpinBox_stddev_ey_pc.setReadOnly(True)
        self.doubleSpinBox_stddev_ey_pc.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_stddev_ey_pc.setDecimals(5)
        self.doubleSpinBox_stddev_ey_pc.setMinimum(-999.0)
        self.doubleSpinBox_stddev_ey_pc.setMaximum(999.0)
        self.doubleSpinBox_stddev_ey_pc.setObjectName("doubleSpinBox_stddev_ey_pc")
        self.gridLayout_3.addWidget(self.doubleSpinBox_stddev_ey_pc, 7, 5, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_10.setPalette(palette)
        self.label_10.setObjectName("label_10")
        self.gridLayout_3.addWidget(self.label_10, 8, 4, 1, 1)
        self.doubleSpinBox_n = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_n.setPalette(palette)
        self.doubleSpinBox_n.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_n.setKeyboardTracking(True)
        self.doubleSpinBox_n.setDecimals(5)
        self.doubleSpinBox_n.setMinimum(0.0)
        self.doubleSpinBox_n.setMaximum(9999999.0)
        self.doubleSpinBox_n.setSingleStep(100.0)
        self.doubleSpinBox_n.setProperty("value", 0.0)
        self.doubleSpinBox_n.setObjectName("doubleSpinBox_n")
        self.gridLayout_3.addWidget(self.doubleSpinBox_n, 8, 1, 1, 1)
        self.label_pm_9 = QtWidgets.QLabel(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_pm_9.setPalette(palette)
        self.label_pm_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_pm_9.setObjectName("label_pm_9")
        self.gridLayout_3.addWidget(self.label_pm_9, 12, 4, 1, 1)
        self.horizontalLayout_21 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_21.setObjectName("horizontalLayout_21")
        self.checkBox_eyfit_fitSr = QtWidgets.QCheckBox(self.tab_Fit_EY)
        self.checkBox_eyfit_fitSr.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.checkBox_eyfit_fitSr.setText("")
        self.checkBox_eyfit_fitSr.setObjectName("checkBox_eyfit_fitSr")
        self.horizontalLayout_21.addWidget(self.checkBox_eyfit_fitSr)
        self.label_sr = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_sr.setObjectName("label_sr")
        self.horizontalLayout_21.addWidget(self.label_sr)
        self.horizontalLayout_21.setStretch(1, 10)
        self.gridLayout_3.addLayout(self.horizontalLayout_21, 12, 0, 1, 1)
        self.doubleSpinBox_EYFit_Sr = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        self.doubleSpinBox_EYFit_Sr.setEnabled(True)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYFit_Sr.setPalette(palette)
        self.doubleSpinBox_EYFit_Sr.setFrame(False)
        self.doubleSpinBox_EYFit_Sr.setReadOnly(True)
        self.doubleSpinBox_EYFit_Sr.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYFit_Sr.setDecimals(5)
        self.doubleSpinBox_EYFit_Sr.setMinimum(-999.0)
        self.doubleSpinBox_EYFit_Sr.setMaximum(999.0)
        self.doubleSpinBox_EYFit_Sr.setObjectName("doubleSpinBox_EYFit_Sr")
        self.gridLayout_3.addWidget(self.doubleSpinBox_EYFit_Sr, 12, 3, 1, 1)
        self.doubleSpinBox_stddev_Sr = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        self.doubleSpinBox_stddev_Sr.setEnabled(True)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_stddev_Sr.setPalette(palette)
        self.doubleSpinBox_stddev_Sr.setFrame(False)
        self.doubleSpinBox_stddev_Sr.setReadOnly(True)
        self.doubleSpinBox_stddev_Sr.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_stddev_Sr.setDecimals(5)
        self.doubleSpinBox_stddev_Sr.setMinimum(-999.0)
        self.doubleSpinBox_stddev_Sr.setMaximum(999.0)
        self.doubleSpinBox_stddev_Sr.setObjectName("doubleSpinBox_stddev_Sr")
        self.gridLayout_3.addWidget(self.doubleSpinBox_stddev_Sr, 12, 5, 1, 1)
        self.button_fit_ey = QtWidgets.QPushButton(self.tab_Fit_EY)
        self.button_fit_ey.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_fit_ey.sizePolicy().hasHeightForWidth())
        self.button_fit_ey.setSizePolicy(sizePolicy)
        self.button_fit_ey.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.button_fit_ey.setFont(font)
        self.button_fit_ey.setObjectName("button_fit_ey")
        self.gridLayout_3.addWidget(self.button_fit_ey, 13, 3, 1, 3)
        self.label_pm_10 = QtWidgets.QLabel(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_pm_10.setPalette(palette)
        self.label_pm_10.setAlignment(QtCore.Qt.AlignCenter)
        self.label_pm_10.setObjectName("label_pm_10")
        self.gridLayout_3.addWidget(self.label_pm_10, 9, 4, 1, 1)
        self.doubleSpinBox_EYFit_gamma = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        self.doubleSpinBox_EYFit_gamma.setEnabled(True)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYFit_gamma.setPalette(palette)
        self.doubleSpinBox_EYFit_gamma.setFrame(False)
        self.doubleSpinBox_EYFit_gamma.setReadOnly(True)
        self.doubleSpinBox_EYFit_gamma.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYFit_gamma.setDecimals(5)
        self.doubleSpinBox_EYFit_gamma.setMinimum(-999.0)
        self.doubleSpinBox_EYFit_gamma.setMaximum(999.0)
        self.doubleSpinBox_EYFit_gamma.setObjectName("doubleSpinBox_EYFit_gamma")
        self.gridLayout_3.addWidget(self.doubleSpinBox_EYFit_gamma, 9, 3, 1, 1)
        self.gridLayout_txtFiles = QtWidgets.QGridLayout()
        self.gridLayout_txtFiles.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_txtFiles.setObjectName("gridLayout_txtFiles")
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.label_35 = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_35.setObjectName("label_35")
        self.horizontalLayout_13.addWidget(self.label_35)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_13.addItem(spacerItem11)
        self.pushButton_exportGammaFile = QtWidgets.QPushButton(self.tab_Fit_EY)
        self.pushButton_exportGammaFile.setObjectName("pushButton_exportGammaFile")
        self.horizontalLayout_13.addWidget(self.pushButton_exportGammaFile)
        self.gridLayout_txtFiles.addLayout(self.horizontalLayout_13, 1, 0, 1, 1)
        self.label_36 = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_36.setObjectName("label_36")
        self.gridLayout_txtFiles.addWidget(self.label_36, 1, 2, 1, 1)
        self.QTextEdit_FitResult_EY = QtWidgets.QTextEdit(self.tab_Fit_EY)
        self.QTextEdit_FitResult_EY.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
        self.QTextEdit_FitResult_EY.setReadOnly(True)
        self.QTextEdit_FitResult_EY.setObjectName("QTextEdit_FitResult_EY")
        self.gridLayout_txtFiles.addWidget(self.QTextEdit_FitResult_EY, 2, 2, 1, 1)
        self.textEdit_gamma = QtWidgets.QTextEdit(self.tab_Fit_EY)
        self.textEdit_gamma.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
        self.textEdit_gamma.setReadOnly(True)
        self.textEdit_gamma.setObjectName("textEdit_gamma")
        self.gridLayout_txtFiles.addWidget(self.textEdit_gamma, 2, 0, 1, 1)
        self.line_3 = QtWidgets.QFrame(self.tab_Fit_EY)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout_txtFiles.addWidget(self.line_3, 0, 0, 1, 1)
        self.line_5 = QtWidgets.QFrame(self.tab_Fit_EY)
        self.line_5.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.gridLayout_txtFiles.addWidget(self.line_5, 0, 1, 3, 1)
        self.gridLayout_txtFiles.setColumnStretch(0, 1)
        self.gridLayout_txtFiles.setColumnStretch(2, 2)
        self.gridLayout_3.addLayout(self.gridLayout_txtFiles, 16, 0, 1, 6)
        self.doubleSpinBox_EYFit_n = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYFit_n.setPalette(palette)
        self.doubleSpinBox_EYFit_n.setFrame(False)
        self.doubleSpinBox_EYFit_n.setReadOnly(True)
        self.doubleSpinBox_EYFit_n.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYFit_n.setDecimals(5)
        self.doubleSpinBox_EYFit_n.setMinimum(-9999.0)
        self.doubleSpinBox_EYFit_n.setMaximum(1000000000.0)
        self.doubleSpinBox_EYFit_n.setObjectName("doubleSpinBox_EYFit_n")
        self.gridLayout_3.addWidget(self.doubleSpinBox_EYFit_n, 8, 3, 1, 1)
        self.doubleSpinBox_stddev_n = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_stddev_n.setPalette(palette)
        self.doubleSpinBox_stddev_n.setFrame(False)
        self.doubleSpinBox_stddev_n.setReadOnly(True)
        self.doubleSpinBox_stddev_n.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_stddev_n.setDecimals(5)
        self.doubleSpinBox_stddev_n.setMinimum(-999999.0)
        self.doubleSpinBox_stddev_n.setMaximum(9999999.0)
        self.doubleSpinBox_stddev_n.setObjectName("doubleSpinBox_stddev_n")
        self.gridLayout_3.addWidget(self.doubleSpinBox_stddev_n, 8, 5, 1, 1)
        self.horizontalLayout_27 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_27.setObjectName("horizontalLayout_27")
        self.radioButton_EYinit_theo_gamma = QtWidgets.QRadioButton(self.tab_Fit_EY)
        self.radioButton_EYinit_theo_gamma.setObjectName("radioButton_EYinit_theo_gamma")
        self.buttonGroup_3 = QtWidgets.QButtonGroup(MainWindow)
        self.buttonGroup_3.setObjectName("buttonGroup_3")
        self.buttonGroup_3.addButton(self.radioButton_EYinit_theo_gamma)
        self.horizontalLayout_27.addWidget(self.radioButton_EYinit_theo_gamma)
        self.doubleSpinBox_EYinit_theo_gamma = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYinit_theo_gamma.setPalette(palette)
        self.doubleSpinBox_EYinit_theo_gamma.setFrame(False)
        self.doubleSpinBox_EYinit_theo_gamma.setReadOnly(True)
        self.doubleSpinBox_EYinit_theo_gamma.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYinit_theo_gamma.setKeyboardTracking(False)
        self.doubleSpinBox_EYinit_theo_gamma.setDecimals(5)
        self.doubleSpinBox_EYinit_theo_gamma.setMinimum(-9999.0)
        self.doubleSpinBox_EYinit_theo_gamma.setMaximum(9999.0)
        self.doubleSpinBox_EYinit_theo_gamma.setSingleStep(0.1)
        self.doubleSpinBox_EYinit_theo_gamma.setObjectName("doubleSpinBox_EYinit_theo_gamma")
        self.horizontalLayout_27.addWidget(self.doubleSpinBox_EYinit_theo_gamma)
        self.radioButton_EYinit_man_gamma = QtWidgets.QRadioButton(self.tab_Fit_EY)
        self.radioButton_EYinit_man_gamma.setChecked(True)
        self.radioButton_EYinit_man_gamma.setObjectName("radioButton_EYinit_man_gamma")
        self.buttonGroup_3.addButton(self.radioButton_EYinit_man_gamma)
        self.horizontalLayout_27.addWidget(self.radioButton_EYinit_man_gamma)
        self.doubleSpinBox_EYinit_man_gamma = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYinit_man_gamma.setPalette(palette)
        self.doubleSpinBox_EYinit_man_gamma.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYinit_man_gamma.setDecimals(5)
        self.doubleSpinBox_EYinit_man_gamma.setMinimum(-9999.0)
        self.doubleSpinBox_EYinit_man_gamma.setMaximum(9999.0)
        self.doubleSpinBox_EYinit_man_gamma.setSingleStep(0.1)
        self.doubleSpinBox_EYinit_man_gamma.setObjectName("doubleSpinBox_EYinit_man_gamma")
        self.horizontalLayout_27.addWidget(self.doubleSpinBox_EYinit_man_gamma)
        spacerItem12 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_27.addItem(spacerItem12)
        self.horizontalLayout_27.setStretch(1, 1)
        self.horizontalLayout_27.setStretch(3, 1)
        self.horizontalLayout_27.setStretch(4, 5)
        self.gridLayout_3.addLayout(self.horizontalLayout_27, 9, 1, 1, 2)
        self.horizontalSlider_manual_pc = QtWidgets.QSlider(self.tab_Fit_EY)
        self.horizontalSlider_manual_pc.setEnabled(True)
        self.horizontalSlider_manual_pc.setMinimum(0)
        self.horizontalSlider_manual_pc.setMaximum(1000)
        self.horizontalSlider_manual_pc.setSingleStep(10)
        self.horizontalSlider_manual_pc.setPageStep(100)
        self.horizontalSlider_manual_pc.setProperty("value", 500)
        self.horizontalSlider_manual_pc.setTracking(True)
        self.horizontalSlider_manual_pc.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_manual_pc.setTickPosition(QtWidgets.QSlider.NoTicks)
        self.horizontalSlider_manual_pc.setObjectName("horizontalSlider_manual_pc")
        self.gridLayout_3.addWidget(self.horizontalSlider_manual_pc, 7, 2, 1, 1)
        self.doubleSpinBox_pc = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_pc.setPalette(palette)
        self.doubleSpinBox_pc.setWrapping(True)
        self.doubleSpinBox_pc.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_pc.setKeyboardTracking(True)
        self.doubleSpinBox_pc.setDecimals(5)
        self.doubleSpinBox_pc.setMinimum(0.0)
        self.doubleSpinBox_pc.setMaximum(1.0)
        self.doubleSpinBox_pc.setSingleStep(0.01)
        self.doubleSpinBox_pc.setProperty("value", 0.5)
        self.doubleSpinBox_pc.setObjectName("doubleSpinBox_pc")
        self.gridLayout_3.addWidget(self.doubleSpinBox_pc, 7, 1, 1, 1)
        self.doubleSpinBox_EYFit_pc = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYFit_pc.setPalette(palette)
        self.doubleSpinBox_EYFit_pc.setFrame(False)
        self.doubleSpinBox_EYFit_pc.setReadOnly(True)
        self.doubleSpinBox_EYFit_pc.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYFit_pc.setDecimals(5)
        self.doubleSpinBox_EYFit_pc.setMinimum(-999.0)
        self.doubleSpinBox_EYFit_pc.setMaximum(999.0)
        self.doubleSpinBox_EYFit_pc.setObjectName("doubleSpinBox_EYFit_pc")
        self.gridLayout_3.addWidget(self.doubleSpinBox_EYFit_pc, 7, 3, 1, 1)
        self.doubleSpinBox_EYFit_fc = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYFit_fc.setPalette(palette)
        self.doubleSpinBox_EYFit_fc.setFrame(False)
        self.doubleSpinBox_EYFit_fc.setReadOnly(True)
        self.doubleSpinBox_EYFit_fc.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYFit_fc.setDecimals(5)
        self.doubleSpinBox_EYFit_fc.setMinimum(-999.0)
        self.doubleSpinBox_EYFit_fc.setMaximum(999.0)
        self.doubleSpinBox_EYFit_fc.setObjectName("doubleSpinBox_EYFit_fc")
        self.gridLayout_3.addWidget(self.doubleSpinBox_EYFit_fc, 6, 3, 1, 1)
        self.doubleSpinBox_stddev_ey_fc = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_stddev_ey_fc.setPalette(palette)
        self.doubleSpinBox_stddev_ey_fc.setFrame(False)
        self.doubleSpinBox_stddev_ey_fc.setReadOnly(True)
        self.doubleSpinBox_stddev_ey_fc.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_stddev_ey_fc.setDecimals(5)
        self.doubleSpinBox_stddev_ey_fc.setMinimum(-999.0)
        self.doubleSpinBox_stddev_ey_fc.setMaximum(999.0)
        self.doubleSpinBox_stddev_ey_fc.setObjectName("doubleSpinBox_stddev_ey_fc")
        self.gridLayout_3.addWidget(self.doubleSpinBox_stddev_ey_fc, 6, 5, 1, 1)
        self.label_pm_8 = QtWidgets.QLabel(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_pm_8.setPalette(palette)
        self.label_pm_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_pm_8.setObjectName("label_pm_8")
        self.gridLayout_3.addWidget(self.label_pm_8, 7, 4, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        self.label_6.setPalette(palette)
        self.label_6.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.label_6.setObjectName("label_6")
        self.gridLayout_3.addWidget(self.label_6, 5, 1, 1, 2)
        self.pushButton_saveToArgand = QtWidgets.QPushButton(self.tab_Fit_EY)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pushButton_saveToArgand.setFont(font)
        self.pushButton_saveToArgand.setObjectName("pushButton_saveToArgand")
        self.gridLayout_3.addWidget(self.pushButton_saveToArgand, 15, 4, 1, 2)
        self.pushButton_set_fitParam_for_manual = QtWidgets.QPushButton(self.tab_Fit_EY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_set_fitParam_for_manual.sizePolicy().hasHeightForWidth())
        self.pushButton_set_fitParam_for_manual.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.pushButton_set_fitParam_for_manual.setFont(font)
        self.pushButton_set_fitParam_for_manual.setObjectName("pushButton_set_fitParam_for_manual")
        self.gridLayout_3.addWidget(self.pushButton_set_fitParam_for_manual, 15, 3, 1, 1)
        self.horizontalLayout_28 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_28.setObjectName("horizontalLayout_28")
        self.label_sr_from_gamma = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_sr_from_gamma.setObjectName("label_sr_from_gamma")
        self.horizontalLayout_28.addWidget(self.label_sr_from_gamma)
        self.doubleSpinBox_EYinit_theo_SR = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYinit_theo_SR.setPalette(palette)
        self.doubleSpinBox_EYinit_theo_SR.setFrame(False)
        self.doubleSpinBox_EYinit_theo_SR.setReadOnly(True)
        self.doubleSpinBox_EYinit_theo_SR.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYinit_theo_SR.setKeyboardTracking(False)
        self.doubleSpinBox_EYinit_theo_SR.setDecimals(5)
        self.doubleSpinBox_EYinit_theo_SR.setMinimum(-10.0)
        self.doubleSpinBox_EYinit_theo_SR.setMaximum(10.0)
        self.doubleSpinBox_EYinit_theo_SR.setSingleStep(0.1)
        self.doubleSpinBox_EYinit_theo_SR.setObjectName("doubleSpinBox_EYinit_theo_SR")
        self.horizontalLayout_28.addWidget(self.doubleSpinBox_EYinit_theo_SR)
        self.label_si = QtWidgets.QLabel(self.tab_Fit_EY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.label_si.sizePolicy().hasHeightForWidth())
        self.label_si.setSizePolicy(sizePolicy)
        self.label_si.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_si.setObjectName("label_si")
        self.horizontalLayout_28.addWidget(self.label_si)
        self.doubleSpinBox_EYinit_abs_si = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYinit_abs_si.setPalette(palette)
        self.doubleSpinBox_EYinit_abs_si.setFrame(False)
        self.doubleSpinBox_EYinit_abs_si.setReadOnly(True)
        self.doubleSpinBox_EYinit_abs_si.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYinit_abs_si.setDecimals(5)
        self.doubleSpinBox_EYinit_abs_si.setMinimum(-10.0)
        self.doubleSpinBox_EYinit_abs_si.setMaximum(10.0)
        self.doubleSpinBox_EYinit_abs_si.setProperty("value", 1.0)
        self.doubleSpinBox_EYinit_abs_si.setObjectName("doubleSpinBox_EYinit_abs_si")
        self.horizontalLayout_28.addWidget(self.doubleSpinBox_EYinit_abs_si)
        self.label_psi = QtWidgets.QLabel(self.tab_Fit_EY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.label_psi.sizePolicy().hasHeightForWidth())
        self.label_psi.setSizePolicy(sizePolicy)
        self.label_psi.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_psi.setObjectName("label_psi")
        self.horizontalLayout_28.addWidget(self.label_psi)
        self.doubleSpinBox_EYinit_Psi = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYinit_Psi.setPalette(palette)
        self.doubleSpinBox_EYinit_Psi.setFrame(False)
        self.doubleSpinBox_EYinit_Psi.setReadOnly(True)
        self.doubleSpinBox_EYinit_Psi.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYinit_Psi.setDecimals(5)
        self.doubleSpinBox_EYinit_Psi.setMinimum(-10.0)
        self.doubleSpinBox_EYinit_Psi.setMaximum(10.0)
        self.doubleSpinBox_EYinit_Psi.setObjectName("doubleSpinBox_EYinit_Psi")
        self.horizontalLayout_28.addWidget(self.doubleSpinBox_EYinit_Psi)
        self.label_Q0 = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_Q0.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_Q0.setObjectName("label_Q0")
        self.horizontalLayout_28.addWidget(self.label_Q0)
        self.doubleSpinBox_EYinit_Q0 = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYinit_Q0.setPalette(palette)
        self.doubleSpinBox_EYinit_Q0.setFrame(False)
        self.doubleSpinBox_EYinit_Q0.setReadOnly(True)
        self.doubleSpinBox_EYinit_Q0.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYinit_Q0.setDecimals(5)
        self.doubleSpinBox_EYinit_Q0.setMinimum(-10.0)
        self.doubleSpinBox_EYinit_Q0.setMaximum(10.0)
        self.doubleSpinBox_EYinit_Q0.setObjectName("doubleSpinBox_EYinit_Q0")
        self.horizontalLayout_28.addWidget(self.doubleSpinBox_EYinit_Q0)
        self.label_QH = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_QH.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_QH.setObjectName("label_QH")
        self.horizontalLayout_28.addWidget(self.label_QH)
        self.doubleSpinBox_EYinit_QH = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYinit_QH.setPalette(palette)
        self.doubleSpinBox_EYinit_QH.setFrame(False)
        self.doubleSpinBox_EYinit_QH.setReadOnly(True)
        self.doubleSpinBox_EYinit_QH.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYinit_QH.setDecimals(5)
        self.doubleSpinBox_EYinit_QH.setMinimum(-10.0)
        self.doubleSpinBox_EYinit_QH.setMaximum(10.0)
        self.doubleSpinBox_EYinit_QH.setObjectName("doubleSpinBox_EYinit_QH")
        self.horizontalLayout_28.addWidget(self.doubleSpinBox_EYinit_QH)
        self.gridLayout_3.addLayout(self.horizontalLayout_28, 10, 0, 1, 3)
        self.horizontalLayout_33 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_33.setObjectName("horizontalLayout_33")
        self.label_sr_from_gamma_fitResult = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_sr_from_gamma_fitResult.setObjectName("label_sr_from_gamma_fitResult")
        self.horizontalLayout_33.addWidget(self.label_sr_from_gamma_fitResult)
        self.doubleSpinBox_EYinit_theo_SR_fitResult = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYinit_theo_SR_fitResult.setPalette(palette)
        self.doubleSpinBox_EYinit_theo_SR_fitResult.setFrame(False)
        self.doubleSpinBox_EYinit_theo_SR_fitResult.setReadOnly(True)
        self.doubleSpinBox_EYinit_theo_SR_fitResult.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYinit_theo_SR_fitResult.setKeyboardTracking(False)
        self.doubleSpinBox_EYinit_theo_SR_fitResult.setDecimals(5)
        self.doubleSpinBox_EYinit_theo_SR_fitResult.setMinimum(-10.0)
        self.doubleSpinBox_EYinit_theo_SR_fitResult.setMaximum(10.0)
        self.doubleSpinBox_EYinit_theo_SR_fitResult.setSingleStep(0.1)
        self.doubleSpinBox_EYinit_theo_SR_fitResult.setObjectName("doubleSpinBox_EYinit_theo_SR_fitResult")
        self.horizontalLayout_33.addWidget(self.doubleSpinBox_EYinit_theo_SR_fitResult)
        self.label_si_fitResult = QtWidgets.QLabel(self.tab_Fit_EY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.label_si_fitResult.sizePolicy().hasHeightForWidth())
        self.label_si_fitResult.setSizePolicy(sizePolicy)
        self.label_si_fitResult.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_si_fitResult.setObjectName("label_si_fitResult")
        self.horizontalLayout_33.addWidget(self.label_si_fitResult)
        self.doubleSpinBox_EYinit_abs_si_fitResult = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYinit_abs_si_fitResult.setPalette(palette)
        self.doubleSpinBox_EYinit_abs_si_fitResult.setFrame(False)
        self.doubleSpinBox_EYinit_abs_si_fitResult.setReadOnly(True)
        self.doubleSpinBox_EYinit_abs_si_fitResult.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYinit_abs_si_fitResult.setDecimals(5)
        self.doubleSpinBox_EYinit_abs_si_fitResult.setMinimum(-10.0)
        self.doubleSpinBox_EYinit_abs_si_fitResult.setMaximum(10.0)
        self.doubleSpinBox_EYinit_abs_si_fitResult.setProperty("value", 1.0)
        self.doubleSpinBox_EYinit_abs_si_fitResult.setObjectName("doubleSpinBox_EYinit_abs_si_fitResult")
        self.horizontalLayout_33.addWidget(self.doubleSpinBox_EYinit_abs_si_fitResult)
        self.label_psi_fitResult = QtWidgets.QLabel(self.tab_Fit_EY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.label_psi_fitResult.sizePolicy().hasHeightForWidth())
        self.label_psi_fitResult.setSizePolicy(sizePolicy)
        self.label_psi_fitResult.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_psi_fitResult.setObjectName("label_psi_fitResult")
        self.horizontalLayout_33.addWidget(self.label_psi_fitResult)
        self.doubleSpinBox_EYinit_Psi_fitResult = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYinit_Psi_fitResult.setPalette(palette)
        self.doubleSpinBox_EYinit_Psi_fitResult.setFrame(False)
        self.doubleSpinBox_EYinit_Psi_fitResult.setReadOnly(True)
        self.doubleSpinBox_EYinit_Psi_fitResult.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYinit_Psi_fitResult.setDecimals(5)
        self.doubleSpinBox_EYinit_Psi_fitResult.setMinimum(-10.0)
        self.doubleSpinBox_EYinit_Psi_fitResult.setMaximum(10.0)
        self.doubleSpinBox_EYinit_Psi_fitResult.setObjectName("doubleSpinBox_EYinit_Psi_fitResult")
        self.horizontalLayout_33.addWidget(self.doubleSpinBox_EYinit_Psi_fitResult)
        self.label_Q0_fitResult = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_Q0_fitResult.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_Q0_fitResult.setObjectName("label_Q0_fitResult")
        self.horizontalLayout_33.addWidget(self.label_Q0_fitResult)
        self.doubleSpinBox_EYinit_Q0_fitResult = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYinit_Q0_fitResult.setPalette(palette)
        self.doubleSpinBox_EYinit_Q0_fitResult.setFrame(False)
        self.doubleSpinBox_EYinit_Q0_fitResult.setReadOnly(True)
        self.doubleSpinBox_EYinit_Q0_fitResult.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYinit_Q0_fitResult.setDecimals(5)
        self.doubleSpinBox_EYinit_Q0_fitResult.setMinimum(-10.0)
        self.doubleSpinBox_EYinit_Q0_fitResult.setMaximum(10.0)
        self.doubleSpinBox_EYinit_Q0_fitResult.setObjectName("doubleSpinBox_EYinit_Q0_fitResult")
        self.horizontalLayout_33.addWidget(self.doubleSpinBox_EYinit_Q0_fitResult)
        self.label_QH_fitResult = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_QH_fitResult.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_QH_fitResult.setObjectName("label_QH_fitResult")
        self.horizontalLayout_33.addWidget(self.label_QH_fitResult)
        self.doubleSpinBox_EYinit_QH_fitResult = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYinit_QH_fitResult.setPalette(palette)
        self.doubleSpinBox_EYinit_QH_fitResult.setFrame(False)
        self.doubleSpinBox_EYinit_QH_fitResult.setReadOnly(True)
        self.doubleSpinBox_EYinit_QH_fitResult.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYinit_QH_fitResult.setDecimals(5)
        self.doubleSpinBox_EYinit_QH_fitResult.setMinimum(-10.0)
        self.doubleSpinBox_EYinit_QH_fitResult.setMaximum(10.0)
        self.doubleSpinBox_EYinit_QH_fitResult.setObjectName("doubleSpinBox_EYinit_QH_fitResult")
        self.horizontalLayout_33.addWidget(self.doubleSpinBox_EYinit_QH_fitResult)
        self.gridLayout_3.addLayout(self.horizontalLayout_33, 11, 0, 1, 3)
        self.horizontalLayout_31 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_31.setObjectName("horizontalLayout_31")
        self.radioButton_EYinit_man_SR = QtWidgets.QRadioButton(self.tab_Fit_EY)
        self.radioButton_EYinit_man_SR.setChecked(False)
        self.radioButton_EYinit_man_SR.setObjectName("radioButton_EYinit_man_SR")
        self.buttonGroup_3.addButton(self.radioButton_EYinit_man_SR)
        self.horizontalLayout_31.addWidget(self.radioButton_EYinit_man_SR)
        self.doubleSpinBox_EYinit_man_SR = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYinit_man_SR.setPalette(palette)
        self.doubleSpinBox_EYinit_man_SR.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYinit_man_SR.setDecimals(5)
        self.doubleSpinBox_EYinit_man_SR.setMinimum(-9999.0)
        self.doubleSpinBox_EYinit_man_SR.setMaximum(9999.0)
        self.doubleSpinBox_EYinit_man_SR.setSingleStep(0.1)
        self.doubleSpinBox_EYinit_man_SR.setProperty("value", 1.0)
        self.doubleSpinBox_EYinit_man_SR.setObjectName("doubleSpinBox_EYinit_man_SR")
        self.horizontalLayout_31.addWidget(self.doubleSpinBox_EYinit_man_SR)
        spacerItem13 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_31.addItem(spacerItem13)
        self.gridLayout_3.addLayout(self.horizontalLayout_31, 12, 1, 1, 2)
        self.horizontalLayout_23 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_23.setObjectName("horizontalLayout_23")
        self.checkBox_eyfit_fitPc = QtWidgets.QCheckBox(self.tab_Fit_EY)
        self.checkBox_eyfit_fitPc.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.checkBox_eyfit_fitPc.setText("")
        self.checkBox_eyfit_fitPc.setChecked(True)
        self.checkBox_eyfit_fitPc.setObjectName("checkBox_eyfit_fitPc")
        self.horizontalLayout_23.addWidget(self.checkBox_eyfit_fitPc)
        self.label_44 = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_44.setObjectName("label_44")
        self.horizontalLayout_23.addWidget(self.label_44)
        self.horizontalLayout_23.setStretch(1, 10)
        self.gridLayout_3.addLayout(self.horizontalLayout_23, 7, 0, 1, 1)
        self.horizontalLayout_34 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_34.setObjectName("horizontalLayout_34")
        self.checkBox_eyfit_fitFc = QtWidgets.QCheckBox(self.tab_Fit_EY)
        font = QtGui.QFont()
        font.setKerning(True)
        self.checkBox_eyfit_fitFc.setFont(font)
        self.checkBox_eyfit_fitFc.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.checkBox_eyfit_fitFc.setText("")
        self.checkBox_eyfit_fitFc.setChecked(True)
        self.checkBox_eyfit_fitFc.setObjectName("checkBox_eyfit_fitFc")
        self.horizontalLayout_34.addWidget(self.checkBox_eyfit_fitFc)
        self.label_46 = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_46.setObjectName("label_46")
        self.horizontalLayout_34.addWidget(self.label_46)
        self.horizontalLayout_34.setStretch(1, 10)
        self.gridLayout_3.addLayout(self.horizontalLayout_34, 6, 0, 1, 1)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.doubleSpinBox_ndp_delta_p = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        self.doubleSpinBox_ndp_delta_p.setReadOnly(False)
        self.doubleSpinBox_ndp_delta_p.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ndp_delta_p.setKeyboardTracking(False)
        self.doubleSpinBox_ndp_delta_p.setDecimals(5)
        self.doubleSpinBox_ndp_delta_p.setMinimum(-9999999.0)
        self.doubleSpinBox_ndp_delta_p.setMaximum(9999999.0)
        self.doubleSpinBox_ndp_delta_p.setSingleStep(0.1)
        self.doubleSpinBox_ndp_delta_p.setProperty("value", 0.0)
        self.doubleSpinBox_ndp_delta_p.setObjectName("doubleSpinBox_ndp_delta_p")
        self.horizontalLayout_4.addWidget(self.doubleSpinBox_ndp_delta_p)
        self.doubleSpinBox_ndp_delta_d = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        self.doubleSpinBox_ndp_delta_d.setReadOnly(False)
        self.doubleSpinBox_ndp_delta_d.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ndp_delta_d.setKeyboardTracking(False)
        self.doubleSpinBox_ndp_delta_d.setDecimals(5)
        self.doubleSpinBox_ndp_delta_d.setMinimum(-999.0)
        self.doubleSpinBox_ndp_delta_d.setMaximum(999.0)
        self.doubleSpinBox_ndp_delta_d.setSingleStep(0.1)
        self.doubleSpinBox_ndp_delta_d.setProperty("value", 0.0)
        self.doubleSpinBox_ndp_delta_d.setObjectName("doubleSpinBox_ndp_delta_d")
        self.horizontalLayout_4.addWidget(self.doubleSpinBox_ndp_delta_d)
        self.label_delta = QtWidgets.QLabel(self.tab_Fit_EY)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.label_delta.sizePolicy().hasHeightForWidth())
        self.label_delta.setSizePolicy(sizePolicy)
        self.label_delta.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_delta.setObjectName("label_delta")
        self.horizontalLayout_4.addWidget(self.label_delta)
        self.doubleSpinBox_EYinit_Delta = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(159, 158, 158))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.doubleSpinBox_EYinit_Delta.setPalette(palette)
        self.doubleSpinBox_EYinit_Delta.setFrame(False)
        self.doubleSpinBox_EYinit_Delta.setReadOnly(True)
        self.doubleSpinBox_EYinit_Delta.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_EYinit_Delta.setKeyboardTracking(False)
        self.doubleSpinBox_EYinit_Delta.setDecimals(5)
        self.doubleSpinBox_EYinit_Delta.setMinimum(-9999.0)
        self.doubleSpinBox_EYinit_Delta.setMaximum(9999.0)
        self.doubleSpinBox_EYinit_Delta.setSingleStep(0.1)
        self.doubleSpinBox_EYinit_Delta.setObjectName("doubleSpinBox_EYinit_Delta")
        self.horizontalLayout_4.addWidget(self.doubleSpinBox_EYinit_Delta)
        self.label_E_Bragg_2 = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_E_Bragg_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_E_Bragg_2.setObjectName("label_E_Bragg_2")
        self.horizontalLayout_4.addWidget(self.label_E_Bragg_2)
        self.doubleSpinBox_ndp_EBragg = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        self.doubleSpinBox_ndp_EBragg.setFrame(False)
        self.doubleSpinBox_ndp_EBragg.setReadOnly(True)
        self.doubleSpinBox_ndp_EBragg.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ndp_EBragg.setKeyboardTracking(False)
        self.doubleSpinBox_ndp_EBragg.setDecimals(2)
        self.doubleSpinBox_ndp_EBragg.setMinimum(0.0)
        self.doubleSpinBox_ndp_EBragg.setMaximum(99999.0)
        self.doubleSpinBox_ndp_EBragg.setSingleStep(10.0)
        self.doubleSpinBox_ndp_EBragg.setProperty("value", 0.0)
        self.doubleSpinBox_ndp_EBragg.setObjectName("doubleSpinBox_ndp_EBragg")
        self.horizontalLayout_4.addWidget(self.doubleSpinBox_ndp_EBragg)
        self.label_E_Kin_2 = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_E_Kin_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_E_Kin_2.setObjectName("label_E_Kin_2")
        self.horizontalLayout_4.addWidget(self.label_E_Kin_2)
        self.doubleSpinBox_ndp_Ekin = QtWidgets.QDoubleSpinBox(self.tab_Fit_EY)
        self.doubleSpinBox_ndp_Ekin.setFrame(False)
        self.doubleSpinBox_ndp_Ekin.setReadOnly(True)
        self.doubleSpinBox_ndp_Ekin.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_ndp_Ekin.setKeyboardTracking(False)
        self.doubleSpinBox_ndp_Ekin.setDecimals(2)
        self.doubleSpinBox_ndp_Ekin.setMinimum(-999999.0)
        self.doubleSpinBox_ndp_Ekin.setMaximum(9999999.0)
        self.doubleSpinBox_ndp_Ekin.setSingleStep(0.0)
        self.doubleSpinBox_ndp_Ekin.setObjectName("doubleSpinBox_ndp_Ekin")
        self.horizontalLayout_4.addWidget(self.doubleSpinBox_ndp_Ekin)
        spacerItem14 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem14)
        self.gridLayout_3.addLayout(self.horizontalLayout_4, 1, 0, 1, 6)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.radioButton_DQ_approx = QtWidgets.QRadioButton(self.tab_Fit_EY)
        self.radioButton_DQ_approx.setObjectName("radioButton_DQ_approx")
        self.horizontalLayout_9.addWidget(self.radioButton_DQ_approx)
        self.label_3 = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_9.addWidget(self.label_3)
        self.comboBox_NonDipolar_Element = QtWidgets.QComboBox(self.tab_Fit_EY)
        self.comboBox_NonDipolar_Element.setObjectName("comboBox_NonDipolar_Element")
        self.horizontalLayout_9.addWidget(self.comboBox_NonDipolar_Element)
        self.label_21 = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_21.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_21.setObjectName("label_21")
        self.horizontalLayout_9.addWidget(self.label_21)
        self.spinBox_NonDipolar_Element_Z = QtWidgets.QSpinBox(self.tab_Fit_EY)
        self.spinBox_NonDipolar_Element_Z.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.spinBox_NonDipolar_Element_Z.setMaximum(101)
        self.spinBox_NonDipolar_Element_Z.setProperty("value", 1)
        self.spinBox_NonDipolar_Element_Z.setObjectName("spinBox_NonDipolar_Element_Z")
        self.horizontalLayout_9.addWidget(self.spinBox_NonDipolar_Element_Z)
        self.label_20 = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_20.setObjectName("label_20")
        self.horizontalLayout_9.addWidget(self.label_20)
        self.comboBox_NonDipolar_Shells = QtWidgets.QComboBox(self.tab_Fit_EY)
        self.comboBox_NonDipolar_Shells.setObjectName("comboBox_NonDipolar_Shells")
        self.horizontalLayout_9.addWidget(self.comboBox_NonDipolar_Shells)
        self.label_34 = QtWidgets.QLabel(self.tab_Fit_EY)
        self.label_34.setObjectName("label_34")
        self.horizontalLayout_9.addWidget(self.label_34)
        spacerItem15 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem15)
        self.gridLayout_3.addLayout(self.horizontalLayout_9, 0, 0, 1, 6)
        self.line_2 = QtWidgets.QFrame(self.tab_Fit_EY)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.gridLayout_3.addWidget(self.line_2, 4, 0, 1, 2)
        self.radioButton_D_approx = QtWidgets.QRadioButton(self.tab_Fit_EY)
        self.radioButton_D_approx.setChecked(True)
        self.radioButton_D_approx.setObjectName("radioButton_D_approx")
        self.gridLayout_3.addWidget(self.radioButton_D_approx, 3, 0, 1, 2)
        self.verticalLayout_fit_ey = QtWidgets.QVBoxLayout()
        self.verticalLayout_fit_ey.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout_fit_ey.setObjectName("verticalLayout_fit_ey")
        self.gridLayout_3.addLayout(self.verticalLayout_fit_ey, 0, 6, 17, 1)
        self.line_10 = QtWidgets.QFrame(self.tab_Fit_EY)
        self.line_10.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_10.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_10.setObjectName("line_10")
        self.gridLayout_3.addWidget(self.line_10, 2, 2, 1, 4)
        self.gridLayout_3.setColumnStretch(0, 1)
        self.gridLayout_3.setColumnStretch(1, 1)
        self.gridLayout_3.setColumnStretch(2, 5)
        self.gridLayout_3.setColumnStretch(3, 1)
        self.gridLayout_3.setColumnStretch(5, 1)
        self.gridLayout_3.setColumnStretch(6, 20)
        self.verticalLayout_2.addLayout(self.gridLayout_3)
        self.tab_Main.addTab(self.tab_Fit_EY, "")
        self.tab_Argand = QtWidgets.QWidget()
        self.tab_Argand.setObjectName("tab_Argand")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.tab_Argand)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.gridLayout_14 = QtWidgets.QGridLayout()
        self.gridLayout_14.setVerticalSpacing(6)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.label_ArgandVersion = QtWidgets.QLabel(self.tab_Argand)
        self.label_ArgandVersion.setEnabled(False)
        self.label_ArgandVersion.setText("")
        self.label_ArgandVersion.setAlignment(QtCore.Qt.AlignCenter)
        self.label_ArgandVersion.setObjectName("label_ArgandVersion")
        self.gridLayout_14.addWidget(self.label_ArgandVersion, 1, 10, 1, 2)
        self.doubleSpinBox_Argand_pcB = QtWidgets.QDoubleSpinBox(self.tab_Argand)
        self.doubleSpinBox_Argand_pcB.setEnabled(False)
        self.doubleSpinBox_Argand_pcB.setFrame(False)
        self.doubleSpinBox_Argand_pcB.setReadOnly(True)
        self.doubleSpinBox_Argand_pcB.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_Argand_pcB.setDecimals(4)
        self.doubleSpinBox_Argand_pcB.setMaximum(1.0)
        self.doubleSpinBox_Argand_pcB.setProperty("value", 0.3)
        self.doubleSpinBox_Argand_pcB.setObjectName("doubleSpinBox_Argand_pcB")
        self.gridLayout_14.addWidget(self.doubleSpinBox_Argand_pcB, 3, 7, 1, 1)
        self.pushButton_Argand_Remove = QtWidgets.QPushButton(self.tab_Argand)
        self.pushButton_Argand_Remove.setEnabled(True)
        self.pushButton_Argand_Remove.setObjectName("pushButton_Argand_Remove")
        self.gridLayout_14.addWidget(self.pushButton_Argand_Remove, 1, 1, 1, 1)
        spacerItem16 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_14.addItem(spacerItem16, 1, 3, 1, 1)
        self.checkBox_Argand_display_group_errorBars = QtWidgets.QCheckBox(self.tab_Argand)
        self.checkBox_Argand_display_group_errorBars.setChecked(True)
        self.checkBox_Argand_display_group_errorBars.setObjectName("checkBox_Argand_display_group_errorBars")
        self.gridLayout_14.addWidget(self.checkBox_Argand_display_group_errorBars, 4, 0, 1, 1)
        self.pushButton_Argand_AddGroup = QtWidgets.QPushButton(self.tab_Argand)
        self.pushButton_Argand_AddGroup.setEnabled(True)
        self.pushButton_Argand_AddGroup.setObjectName("pushButton_Argand_AddGroup")
        self.gridLayout_14.addWidget(self.pushButton_Argand_AddGroup, 1, 0, 1, 1)
        self.checkBox_Argand_display_originVectors = QtWidgets.QCheckBox(self.tab_Argand)
        self.checkBox_Argand_display_originVectors.setChecked(True)
        self.checkBox_Argand_display_originVectors.setObjectName("checkBox_Argand_display_originVectors")
        self.gridLayout_14.addWidget(self.checkBox_Argand_display_originVectors, 4, 1, 1, 1)
        self.doubleSpinBox_Argand_pcA = QtWidgets.QDoubleSpinBox(self.tab_Argand)
        self.doubleSpinBox_Argand_pcA.setEnabled(False)
        self.doubleSpinBox_Argand_pcA.setButtonSymbols(QtWidgets.QAbstractSpinBox.PlusMinus)
        self.doubleSpinBox_Argand_pcA.setDecimals(4)
        self.doubleSpinBox_Argand_pcA.setMaximum(1.0)
        self.doubleSpinBox_Argand_pcA.setSingleStep(0.01)
        self.doubleSpinBox_Argand_pcA.setProperty("value", 0.3)
        self.doubleSpinBox_Argand_pcA.setObjectName("doubleSpinBox_Argand_pcA")
        self.gridLayout_14.addWidget(self.doubleSpinBox_Argand_pcA, 3, 6, 1, 1)
        self.label_23 = QtWidgets.QLabel(self.tab_Argand)
        self.label_23.setEnabled(False)
        self.label_23.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.label_23.setObjectName("label_23")
        self.gridLayout_14.addWidget(self.label_23, 2, 6, 1, 1)
        self.label_28 = QtWidgets.QLabel(self.tab_Argand)
        self.label_28.setEnabled(False)
        self.label_28.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_28.setObjectName("label_28")
        self.gridLayout_14.addWidget(self.label_28, 4, 5, 1, 1)
        self.doubleSpinBox_Argand_nB = QtWidgets.QDoubleSpinBox(self.tab_Argand)
        self.doubleSpinBox_Argand_nB.setEnabled(False)
        self.doubleSpinBox_Argand_nB.setFrame(False)
        self.doubleSpinBox_Argand_nB.setReadOnly(True)
        self.doubleSpinBox_Argand_nB.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_Argand_nB.setMaximum(1.0)
        self.doubleSpinBox_Argand_nB.setSingleStep(0.1)
        self.doubleSpinBox_Argand_nB.setProperty("value", 0.5)
        self.doubleSpinBox_Argand_nB.setObjectName("doubleSpinBox_Argand_nB")
        self.gridLayout_14.addWidget(self.doubleSpinBox_Argand_nB, 5, 7, 1, 1)
        self.doubleSpinBox_Argand_fcA = QtWidgets.QDoubleSpinBox(self.tab_Argand)
        self.doubleSpinBox_Argand_fcA.setEnabled(False)
        self.doubleSpinBox_Argand_fcA.setButtonSymbols(QtWidgets.QAbstractSpinBox.PlusMinus)
        self.doubleSpinBox_Argand_fcA.setDecimals(4)
        self.doubleSpinBox_Argand_fcA.setMinimum(-99.0)
        self.doubleSpinBox_Argand_fcA.setMaximum(99.0)
        self.doubleSpinBox_Argand_fcA.setSingleStep(0.01)
        self.doubleSpinBox_Argand_fcA.setProperty("value", 1.0)
        self.doubleSpinBox_Argand_fcA.setObjectName("doubleSpinBox_Argand_fcA")
        self.gridLayout_14.addWidget(self.doubleSpinBox_Argand_fcA, 4, 6, 1, 1)
        self.label_24 = QtWidgets.QLabel(self.tab_Argand)
        self.label_24.setEnabled(False)
        self.label_24.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.label_24.setObjectName("label_24")
        self.gridLayout_14.addWidget(self.label_24, 2, 7, 1, 1)
        self.label_25 = QtWidgets.QLabel(self.tab_Argand)
        self.label_25.setEnabled(False)
        self.label_25.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_25.setObjectName("label_25")
        self.gridLayout_14.addWidget(self.label_25, 3, 5, 1, 1)
        self.doubleSpinBox_Argand_nA = QtWidgets.QDoubleSpinBox(self.tab_Argand)
        self.doubleSpinBox_Argand_nA.setEnabled(False)
        self.doubleSpinBox_Argand_nA.setButtonSymbols(QtWidgets.QAbstractSpinBox.PlusMinus)
        self.doubleSpinBox_Argand_nA.setMaximum(1.0)
        self.doubleSpinBox_Argand_nA.setSingleStep(0.05)
        self.doubleSpinBox_Argand_nA.setProperty("value", 0.5)
        self.doubleSpinBox_Argand_nA.setObjectName("doubleSpinBox_Argand_nA")
        self.gridLayout_14.addWidget(self.doubleSpinBox_Argand_nA, 5, 6, 1, 1)
        self.doubleSpinBox_Argand_fcB = QtWidgets.QDoubleSpinBox(self.tab_Argand)
        self.doubleSpinBox_Argand_fcB.setEnabled(False)
        self.doubleSpinBox_Argand_fcB.setFrame(False)
        self.doubleSpinBox_Argand_fcB.setReadOnly(True)
        self.doubleSpinBox_Argand_fcB.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.doubleSpinBox_Argand_fcB.setDecimals(4)
        self.doubleSpinBox_Argand_fcB.setMinimum(-99.0)
        self.doubleSpinBox_Argand_fcB.setMaximum(99.0)
        self.doubleSpinBox_Argand_fcB.setProperty("value", 1.0)
        self.doubleSpinBox_Argand_fcB.setObjectName("doubleSpinBox_Argand_fcB")
        self.gridLayout_14.addWidget(self.doubleSpinBox_Argand_fcB, 4, 7, 1, 1)
        self.label_26 = QtWidgets.QLabel(self.tab_Argand)
        self.label_26.setEnabled(False)
        self.label_26.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_26.setObjectName("label_26")
        self.gridLayout_14.addWidget(self.label_26, 5, 5, 1, 1)
        self.checkBox_Argand_display_errorBars = QtWidgets.QCheckBox(self.tab_Argand)
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        self.checkBox_Argand_display_errorBars.setFont(font)
        self.checkBox_Argand_display_errorBars.setChecked(True)
        self.checkBox_Argand_display_errorBars.setObjectName("checkBox_Argand_display_errorBars")
        self.gridLayout_14.addWidget(self.checkBox_Argand_display_errorBars, 5, 0, 1, 1)
        self.checkBox_displayLabels = QtWidgets.QCheckBox(self.tab_Argand)
        self.checkBox_displayLabels.setToolTip("")
        self.checkBox_displayLabels.setChecked(False)
        self.checkBox_displayLabels.setObjectName("checkBox_displayLabels")
        self.gridLayout_14.addWidget(self.checkBox_displayLabels, 5, 1, 1, 1)
        self.pushButton_GpBySlice = QtWidgets.QPushButton(self.tab_Argand)
        self.pushButton_GpBySlice.setObjectName("pushButton_GpBySlice")
        self.gridLayout_14.addWidget(self.pushButton_GpBySlice, 3, 1, 1, 1)
        self.pushButton_Argand_removeAll = QtWidgets.QPushButton(self.tab_Argand)
        self.pushButton_Argand_removeAll.setObjectName("pushButton_Argand_removeAll")
        self.gridLayout_14.addWidget(self.pushButton_Argand_removeAll, 2, 1, 1, 1)
        self.pushButton_Argand_ManualValues = QtWidgets.QPushButton(self.tab_Argand)
        self.pushButton_Argand_ManualValues.setEnabled(True)
        self.pushButton_Argand_ManualValues.setObjectName("pushButton_Argand_ManualValues")
        self.gridLayout_14.addWidget(self.pushButton_Argand_ManualValues, 3, 0, 1, 1)
        self.pushButton_Argand_AddDataset = QtWidgets.QPushButton(self.tab_Argand)
        self.pushButton_Argand_AddDataset.setEnabled(True)
        self.pushButton_Argand_AddDataset.setObjectName("pushButton_Argand_AddDataset")
        self.gridLayout_14.addWidget(self.pushButton_Argand_AddDataset, 2, 0, 1, 1)
        self.line_6 = QtWidgets.QFrame(self.tab_Argand)
        self.line_6.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.gridLayout_14.addWidget(self.line_6, 1, 4, 5, 1)
        self.line_7 = QtWidgets.QFrame(self.tab_Argand)
        self.line_7.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.gridLayout_14.addWidget(self.line_7, 1, 8, 5, 1)
        self.spinBox_Pc_grid_lines = QtWidgets.QSpinBox(self.tab_Argand)
        self.spinBox_Pc_grid_lines.setMaximum(1000)
        self.spinBox_Pc_grid_lines.setProperty("value", 20)
        self.spinBox_Pc_grid_lines.setObjectName("spinBox_Pc_grid_lines")
        self.gridLayout_14.addWidget(self.spinBox_Pc_grid_lines, 4, 11, 1, 1)
        self.label_liveFc = QtWidgets.QLabel(self.tab_Argand)
        self.label_liveFc.setAlignment(QtCore.Qt.AlignCenter)
        self.label_liveFc.setObjectName("label_liveFc")
        self.gridLayout_14.addWidget(self.label_liveFc, 3, 11, 1, 1)
        self.pushButton_Argand_Save = QtWidgets.QPushButton(self.tab_Argand)
        self.pushButton_Argand_Save.setObjectName("pushButton_Argand_Save")
        self.gridLayout_14.addWidget(self.pushButton_Argand_Save, 1, 2, 1, 1)
        self.label_11 = QtWidgets.QLabel(self.tab_Argand)
        self.label_11.setObjectName("label_11")
        self.gridLayout_14.addWidget(self.label_11, 5, 10, 1, 1)
        self.label_27 = QtWidgets.QLabel(self.tab_Argand)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_27.setFont(font)
        self.label_27.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_27.setObjectName("label_27")
        self.gridLayout_14.addWidget(self.label_27, 2, 10, 2, 1)
        self.spinBox_Fc_grid_lines = QtWidgets.QSpinBox(self.tab_Argand)
        self.spinBox_Fc_grid_lines.setMaximum(1000)
        self.spinBox_Fc_grid_lines.setProperty("value", 10)
        self.spinBox_Fc_grid_lines.setObjectName("spinBox_Fc_grid_lines")
        self.gridLayout_14.addWidget(self.spinBox_Fc_grid_lines, 5, 11, 1, 1)
        self.pushButton_refresh = QtWidgets.QPushButton(self.tab_Argand)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_refresh.setFont(font)
        self.pushButton_refresh.setObjectName("pushButton_refresh")
        self.gridLayout_14.addWidget(self.pushButton_refresh, 3, 2, 1, 1)
        self.label_livePc = QtWidgets.QLabel(self.tab_Argand)
        self.label_livePc.setAlignment(QtCore.Qt.AlignCenter)
        self.label_livePc.setObjectName("label_livePc")
        self.gridLayout_14.addWidget(self.label_livePc, 2, 11, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.tab_Argand)
        self.label_12.setObjectName("label_12")
        self.gridLayout_14.addWidget(self.label_12, 4, 10, 1, 1)
        spacerItem17 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_14.addItem(spacerItem17, 2, 9, 1, 1)
        self.pushButton_Argand_Load = QtWidgets.QPushButton(self.tab_Argand)
        self.pushButton_Argand_Load.setObjectName("pushButton_Argand_Load")
        self.gridLayout_14.addWidget(self.pushButton_Argand_Load, 2, 2, 1, 1)
        self.splitter = QtWidgets.QSplitter(self.tab_Argand)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.treeWidget_Argand_List = QtWidgets.QTreeWidget(self.splitter)
        self.treeWidget_Argand_List.setEnabled(True)
        self.treeWidget_Argand_List.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked|QtWidgets.QAbstractItemView.EditKeyPressed|QtWidgets.QAbstractItemView.SelectedClicked)
        self.treeWidget_Argand_List.setDragEnabled(True)
        self.treeWidget_Argand_List.setDragDropMode(QtWidgets.QAbstractItemView.DragDrop)
        self.treeWidget_Argand_List.setDefaultDropAction(QtCore.Qt.MoveAction)
        self.treeWidget_Argand_List.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.treeWidget_Argand_List.setUniformRowHeights(True)
        self.treeWidget_Argand_List.setColumnCount(0)
        self.treeWidget_Argand_List.setObjectName("treeWidget_Argand_List")
        self.treeWidget_Argand_List.header().setCascadingSectionResizes(False)
        self.treeWidget_Argand_List.header().setDefaultSectionSize(100)
        self.treeWidget_Argand_List.header().setHighlightSections(False)
        self.treeWidget_Argand_List.header().setMinimumSectionSize(50)
        self.layoutWidget = QtWidgets.QWidget(self.splitter)
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_argand = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_argand.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_argand.setObjectName("verticalLayout_argand")
        self.gridLayout_14.addWidget(self.splitter, 0, 0, 1, 12)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.checkBox_splitVector = QtWidgets.QCheckBox(self.tab_Argand)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.checkBox_splitVector.setFont(font)
        self.checkBox_splitVector.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.checkBox_splitVector.setObjectName("checkBox_splitVector")
        self.horizontalLayout_8.addWidget(self.checkBox_splitVector)
        self.checkBox_symmetricSplit = QtWidgets.QCheckBox(self.tab_Argand)
        self.checkBox_symmetricSplit.setEnabled(False)
        self.checkBox_symmetricSplit.setToolTip("")
        self.checkBox_symmetricSplit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.checkBox_symmetricSplit.setObjectName("checkBox_symmetricSplit")
        self.horizontalLayout_8.addWidget(self.checkBox_symmetricSplit)
        self.gridLayout_14.addLayout(self.horizontalLayout_8, 1, 5, 1, 3)
        self.checkBox_ArgandList_editable = QtWidgets.QCheckBox(self.tab_Argand)
        self.checkBox_ArgandList_editable.setObjectName("checkBox_ArgandList_editable")
        self.gridLayout_14.addWidget(self.checkBox_ArgandList_editable, 5, 2, 1, 1)
        self.checkBox_SortOnOff = QtWidgets.QCheckBox(self.tab_Argand)
        self.checkBox_SortOnOff.setChecked(True)
        self.checkBox_SortOnOff.setObjectName("checkBox_SortOnOff")
        self.gridLayout_14.addWidget(self.checkBox_SortOnOff, 4, 2, 1, 1)
        self.horizontalLayout.addLayout(self.gridLayout_14)
        self.tab_Main.addTab(self.tab_Argand, "")
        self.tab_AboutLicense = QtWidgets.QWidget()
        self.tab_AboutLicense.setObjectName("tab_AboutLicense")
        self.horizontalLayout_81 = QtWidgets.QHBoxLayout(self.tab_AboutLicense)
        self.horizontalLayout_81.setObjectName("horizontalLayout_81")
        self.toolBox = QtWidgets.QToolBox(self.tab_AboutLicense)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setItalic(True)
        font.setUnderline(False)
        self.toolBox.setFont(font)
        self.toolBox.setObjectName("toolBox")
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setGeometry(QtCore.QRect(0, 0, 1192, 587))
        self.page_3.setObjectName("page_3")
        self.horizontalLayout_25 = QtWidgets.QHBoxLayout(self.page_3)
        self.horizontalLayout_25.setObjectName("horizontalLayout_25")
        spacerItem18 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_25.addItem(spacerItem18)
        self.label_geometry = QtWidgets.QLabel(self.page_3)
        self.label_geometry.setObjectName("label_geometry")
        self.horizontalLayout_25.addWidget(self.label_geometry)
        spacerItem19 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_25.addItem(spacerItem19)
        self.toolBox.addItem(self.page_3, "")
        self.page = QtWidgets.QWidget()
        self.page.setGeometry(QtCore.QRect(0, 0, 1192, 587))
        self.page.setObjectName("page")
        self.verticalLayout_118 = QtWidgets.QVBoxLayout(self.page)
        self.verticalLayout_118.setObjectName("verticalLayout_118")
        self.textEdit_aboutTxt = QtWidgets.QTextEdit(self.page)
        self.textEdit_aboutTxt.setReadOnly(True)
        self.textEdit_aboutTxt.setObjectName("textEdit_aboutTxt")
        self.verticalLayout_118.addWidget(self.textEdit_aboutTxt)
        self.toolBox.addItem(self.page, "")
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setGeometry(QtCore.QRect(0, 0, 98, 88))
        self.page_2.setObjectName("page_2")
        self.horizontalLayout_77 = QtWidgets.QHBoxLayout(self.page_2)
        self.horizontalLayout_77.setObjectName("horizontalLayout_77")
        self.textEdit_licenseTxt = QtWidgets.QTextEdit(self.page_2)
        self.textEdit_licenseTxt.setReadOnly(True)
        self.textEdit_licenseTxt.setObjectName("textEdit_licenseTxt")
        self.horizontalLayout_77.addWidget(self.textEdit_licenseTxt)
        self.toolBox.addItem(self.page_2, "")
        self.horizontalLayout_81.addWidget(self.toolBox)
        self.tab_Main.addTab(self.tab_AboutLicense, "")
        self.verticalLayout_131.addWidget(self.tab_Main)
        self.verticalLayout_131.setStretch(1, 10)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Ubuntu Mono")
        self.statusbar.setFont(font)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setObjectName("actionQuit")

        self.retranslateUi(MainWindow)
        self.tab_Main.setCurrentIndex(5)
        self.toolBox.setCurrentIndex(1)
        self.toolBox.layout().setSpacing(6)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.pushButton_Argand_AddGroup, self.pushButton_Argand_Remove)
        MainWindow.setTabOrder(self.pushButton_Argand_Remove, self.button_display_ey)
        MainWindow.setTabOrder(self.button_display_ey, self.display_window)
        MainWindow.setTabOrder(self.display_window, self.doubleSpinBox_ReflFit_sigma)
        MainWindow.setTabOrder(self.doubleSpinBox_ReflFit_sigma, self.doubleSpinBox_ReflDeviation_sigma)
        MainWindow.setTabOrder(self.doubleSpinBox_ReflDeviation_sigma, self.doubleSpinBox_ReflFit_N)
        MainWindow.setTabOrder(self.doubleSpinBox_ReflFit_N, self.doubleSpinBox_ReflDeviation_N)
        MainWindow.setTabOrder(self.doubleSpinBox_ReflDeviation_N, self.doubleSpinBox_ReflFit_dr)
        MainWindow.setTabOrder(self.doubleSpinBox_ReflFit_dr, self.doubleSpinBox_ReflDeviation_dr)
        MainWindow.setTabOrder(self.doubleSpinBox_ReflDeviation_dr, self.doubleSpinBox_ReflFit_de)
        MainWindow.setTabOrder(self.doubleSpinBox_ReflFit_de, self.doubleSpinBox_ReflDeviation_de)
        MainWindow.setTabOrder(self.doubleSpinBox_ReflDeviation_de, self.doubleSpinBox_ndp_EBragg)
        MainWindow.setTabOrder(self.doubleSpinBox_ndp_EBragg, self.doubleSpinBox_ndp_delta_p)
        MainWindow.setTabOrder(self.doubleSpinBox_ndp_delta_p, self.doubleSpinBox_ndp_delta_d)
        MainWindow.setTabOrder(self.doubleSpinBox_ndp_delta_d, self.LineEdit_CurrentWorkingDirectory)
        MainWindow.setTabOrder(self.LineEdit_CurrentWorkingDirectory, self.textEdit_licenseTxt)
        MainWindow.setTabOrder(self.textEdit_licenseTxt, self.textEdit_aboutTxt)
        MainWindow.setTabOrder(self.textEdit_aboutTxt, self.button_ey_file)
        MainWindow.setTabOrder(self.button_ey_file, self.button_refl_file)
        MainWindow.setTabOrder(self.button_refl_file, self.checkBox_ignore_hvCheck)
        MainWindow.setTabOrder(self.checkBox_ignore_hvCheck, self.signal_name)
        MainWindow.setTabOrder(self.signal_name, self.button_import)
        MainWindow.setTabOrder(self.button_import, self.doubleSpinBox_ReflFit_InitVal_Norm)
        MainWindow.setTabOrder(self.doubleSpinBox_ReflFit_InitVal_Norm, self.doubleSpinBox_ReflFit_InitVal_Bgd)
        MainWindow.setTabOrder(self.doubleSpinBox_ReflFit_InitVal_Bgd, self.doubleSpinBox_ReflFit_InitVal_DeltaE)
        MainWindow.setTabOrder(self.doubleSpinBox_ReflFit_InitVal_DeltaE, self.QTextEdit_FitResult_Refl)
        MainWindow.setTabOrder(self.QTextEdit_FitResult_Refl, self.button_set_refl)
        MainWindow.setTabOrder(self.button_set_refl, self.doubleSpinBox_EYFit_pc)
        MainWindow.setTabOrder(self.doubleSpinBox_EYFit_pc, self.doubleSpinBox_stddev_ey_pc)
        MainWindow.setTabOrder(self.doubleSpinBox_stddev_ey_pc, self.doubleSpinBox_EYFit_n)
        MainWindow.setTabOrder(self.doubleSpinBox_EYFit_n, self.doubleSpinBox_n)
        MainWindow.setTabOrder(self.doubleSpinBox_n, self.doubleSpinBox_fc)
        MainWindow.setTabOrder(self.doubleSpinBox_fc, self.doubleSpinBox_stddev_n)
        MainWindow.setTabOrder(self.doubleSpinBox_stddev_n, self.doubleSpinBox_EYFit_fc)
        MainWindow.setTabOrder(self.doubleSpinBox_EYFit_fc, self.pushButton_exportGammaFile)
        MainWindow.setTabOrder(self.pushButton_exportGammaFile, self.QTextEdit_FitResult_EY)
        MainWindow.setTabOrder(self.QTextEdit_FitResult_EY, self.textEdit_gamma)
        MainWindow.setTabOrder(self.textEdit_gamma, self.doubleSpinBox_pc)
        MainWindow.setTabOrder(self.doubleSpinBox_pc, self.doubleSpinBox_stddev_ey_fc)
        MainWindow.setTabOrder(self.doubleSpinBox_stddev_ey_fc, self.doubleSpinBox_ndp_Ekin)
        MainWindow.setTabOrder(self.doubleSpinBox_ndp_Ekin, self.comboBox_NonDipolar_Element)
        MainWindow.setTabOrder(self.comboBox_NonDipolar_Element, self.spinBox_NonDipolar_Element_Z)
        MainWindow.setTabOrder(self.spinBox_NonDipolar_Element_Z, self.comboBox_NonDipolar_Shells)
        MainWindow.setTabOrder(self.comboBox_NonDipolar_Shells, self.horizontalSlider_manual_fc)
        MainWindow.setTabOrder(self.horizontalSlider_manual_fc, self.horizontalSlider_manual_pc)
        MainWindow.setTabOrder(self.horizontalSlider_manual_pc, self.button_display_refl)
        MainWindow.setTabOrder(self.button_display_refl, self.refl_name)
        MainWindow.setTabOrder(self.refl_name, self.tab_Main)
        MainWindow.setTabOrder(self.tab_Main, self.ey_name)
        MainWindow.setTabOrder(self.ey_name, self.button_CurrentWorkingDirectory)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Torricelli"))
        self.label_39.setText(_translate("MainWindow", "Directory in which a single XSW data set is stored:"))
        self.LineEdit_CurrentWorkingDirectory.setText(_translate("MainWindow", "/"))
        self.button_CurrentWorkingDirectory.setToolTip(_translate("MainWindow", "Find the folder"))
        self.button_CurrentWorkingDirectory.setText(_translate("MainWindow", "..."))
        self.label_DCM_a.setText(_translate("MainWindow", "--"))
        self.label_13.setText(_translate("MainWindow", "α β γ (°) ="))
        self.label_7.setText(_translate("MainWindow", "DW Temperature ="))
        self.radioButton_Sample_Compound.setText(_translate("MainWindow", "&Compound"))
        self.label_40.setText(_translate("MainWindow", "<html><head/><body><p>F<span style=\" font-weight:600; vertical-align:sub;\">H</span> =</p></body></html>"))
        self.label_42.setText(_translate("MainWindow", "<html><head/><body><p>Debye-Waller =</p><p>(B<span style=\" vertical-align:sub;\">n</span> in Å²)</p></body></html>"))
        self.label_8.setText(_translate("MainWindow", "Crystal system:"))
        self.label_Sample_Compound_Structure.setText(_translate("MainWindow", "--"))
        self.label_DCM_Structure.setText(_translate("MainWindow", "--"))
        self.label_30.setText(_translate("MainWindow", "c (Å) ="))
        self.pushButton_editDCM.setText(_translate("MainWindow", "Edit DCM"))
        self.label_47.setText(_translate("MainWindow", "a (Å) ="))
        self.label_DCM_c.setText(_translate("MainWindow", "--"))
        self.label_Elemental_b.setText(_translate("MainWindow", "--"))
        self.label_49.setText(_translate("MainWindow", "b (Å) ="))
        self.doubleSpinBox_Sample_Compound_Temperature.setSuffix(_translate("MainWindow", " K"))
        self.label_Compound_c.setText(_translate("MainWindow", "--"))
        self.label_DCM_b.setText(_translate("MainWindow", "--"))
        self.label_38.setText(_translate("MainWindow", "<html><head/><body><p>F<span style=\" font-weight:600; vertical-align:sub;\"><span style=\"text-decoration: overline\">H</span></span> =</p></body></html>"))
        self.label_48.setText(_translate("MainWindow", "Bragg energy ="))
        self.doubleSpinBox_Sample_Elemental_Temperature.setSuffix(_translate("MainWindow", " K"))
        self.label_43.setText(_translate("MainWindow", "DW method:"))
        self.label_45.setText(_translate("MainWindow", "<html><head/><body><p>F<span style=\" font-weight:600; vertical-align:sub;\">0</span> =</p></body></html>"))
        self.label_Elemental_c.setText(_translate("MainWindow", "--"))
        self.label.setText(_translate("MainWindow", "Element:"))
        self.radioButton_Sample_Elemental.setText(_translate("MainWindow", "&Elemental"))
        self.label_Compound_a.setText(_translate("MainWindow", "--"))
        self.label_Compound_b.setText(_translate("MainWindow", "--"))
        self.label_Elemental_a.setText(_translate("MainWindow", "--"))
        self.label_CheckedValue.setText(_translate("MainWindow", "Checked values:"))
        self.label_DCM_CheckedValue.setText(_translate("MainWindow", "No"))
        self.label_Elemental_CheckedValue.setText(_translate("MainWindow", "No"))
        self.label_Compound_CheckedValue.setText(_translate("MainWindow", "No"))
        self.label_50.setText(_translate("MainWindow", "Substrate"))
        self.label_Sample_Elemental_Structure.setText(_translate("MainWindow", "--"))
        self.doubleSpinBox_DCM_Temperature.setSuffix(_translate("MainWindow", " K"))
        self.label_52.setText(_translate("MainWindow", "DCM"))
        self.label_53.setText(_translate("MainWindow", "<html><head/><body><p>d<span style=\" vertical-align:sub;\">hkl</span> =</p></body></html>"))
        self.label_55.setText(_translate("MainWindow", "Type:"))
        self.label_DCM_Type.setText(_translate("MainWindow", "--"))
        self.label_Sample_Elemental_Type.setText(_translate("MainWindow", "--"))
        self.label_Sample_Compound_Type.setText(_translate("MainWindow", "--"))
        self.label_Elemental_alpha.setText(_translate("MainWindow", "--"))
        self.label_Elemental_beta.setText(_translate("MainWindow", "--"))
        self.label_Elemental_gamma.setText(_translate("MainWindow", "--"))
        self.doubleSpinBox_sample_miscut.setPrefix(_translate("MainWindow", "ζ= "))
        self.doubleSpinBox_sample_miscut.setSuffix(_translate("MainWindow", "°"))
        self.doubleSpinBox_b_cr.setPrefix(_translate("MainWindow", "b= "))
        self.doubleSpinBox_sample_deviation_NI.setPrefix(_translate("MainWindow", "ξ= "))
        self.doubleSpinBox_sample_deviation_NI.setSuffix(_translate("MainWindow", "°"))
        self.doubleSpinBox_theta.setPrefix(_translate("MainWindow", "θ= "))
        self.doubleSpinBox_theta.setSuffix(_translate("MainWindow", " °"))
        self.label_Compound_alpha.setText(_translate("MainWindow", "--"))
        self.label_Compound_beta.setText(_translate("MainWindow", "--"))
        self.label_Compound_gamma.setText(_translate("MainWindow", "--"))
        self.label_57.setText(_translate("MainWindow", "(hkil) ="))
        self.label_DCM_alpha.setText(_translate("MainWindow", "--"))
        self.label_DCM_beta.setText(_translate("MainWindow", "--"))
        self.label_DCM_gamma.setText(_translate("MainWindow", "--"))
        self.radioButton_sigma_pol_light.setText(_translate("MainWindow", "σ-"))
        self.radioButton_pi_pol_light.setText(_translate("MainWindow", "π-polarized light"))
        self.label_29.setText(_translate("MainWindow", "<html><head/><body><p>P<span style=\" vertical-align:sub;\">Refl</span>=</p></body></html>"))
        self.label_33.setText(_translate("MainWindow", "<html><head/><body><p>(ζ=0°, P<span style=\" vertical-align:sub;\">Refl</span>=1,</p></body></html>"))
        self.doubleSpinBox_b_mo.setPrefix(_translate("MainWindow", "b= "))
        self.label_51.setText(_translate("MainWindow", ")"))
        self.pushButton_calculateAllStructureFactors.setText(_translate("MainWindow", "Structure &factors,\n"
"reflectivity and phase"))
        self.label_theoReflRange.setText(_translate("MainWindow", "Photon energy range:"))
        self.doubleSpinBox_theoReflRange.setPrefix(_translate("MainWindow", "± "))
        self.doubleSpinBox_theoReflRange.setSuffix(_translate("MainWindow", " eV"))
        self.label_31.setText(_translate("MainWindow", "(σ-polarized light)"))
        self.tab_Main.setTabText(self.tab_Main.indexOf(self.tab_Ideal_Refl), _translate("MainWindow", "Theoretical reflectivity and phase"))
        self.checkBox_AngularModeToggle.setText(_translate("MainWindow", "Angular mode"))
        self.button_display_refl.setText(_translate("MainWindow", "Display"))
        self.button_refl_file.setToolTip(_translate("MainWindow", "Find the file"))
        self.button_refl_file.setText(_translate("MainWindow", "..."))
        self.checkBox_ignore_hvCheck.setText(_translate("MainWindow", "Ignore the match between Yield and Reflectivity"))
        self.button_import.setText(_translate("MainWindow", "Import re&flectivity and yield"))
        self.button_display_ey.setText(_translate("MainWindow", "&Display"))
        self.button_ey_file.setToolTip(_translate("MainWindow", "Find the file"))
        self.button_ey_file.setText(_translate("MainWindow", "..."))
        self.label_32.setText(_translate("MainWindow", "<html><head/><body><p>Reflectivity and I<span style=\" vertical-align:sub;\">0</span>:</p></body></html>"))
        self.label_41.setText(_translate("MainWindow", "Yield:"))
        self.label_17.setText(_translate("MainWindow", "Selected components {i}:"))
        self.label_signal.setText(_translate("MainWindow", "Components to sum:"))
        self.button_angles_file.setText(_translate("MainWindow", "..."))
        self.button_display_angles.setText(_translate("MainWindow", "Display"))
        self.label_angles.setText(_translate("MainWindow", "Angles:"))
        self.label_select_slice.setText(_translate("MainWindow", "Select slice:"))
        self.spinBox_SelectedSlice.setToolTip(_translate("MainWindow", "Select the slice you want to analize in the further tabs."))
        self.spinBox_SelectedSlice.setPrefix(_translate("MainWindow", "j = "))
        self.label_sliceAngle.setText(_translate("MainWindow", "<html><head/><body><p>=&gt; φ<span style=\" vertical-align:super;\">e</span><span style=\" vertical-align:sub;\">j</span> = </p></body></html>"))
        self.label_AngleOfSlice.setToolTip(_translate("MainWindow", "Angle that corresponds to you chosen slice. This is calculated from the angle range you have selected in MCP Angles."))
        self.label_AngleOfSlice.setText(_translate("MainWindow", "--°"))
        self.label_angles_file_info.setText(_translate("MainWindow", ">import refl and yield data first<"))
        self.tab_Main.setTabText(self.tab_Main.indexOf(self.tab_Import), _translate("MainWindow", "Import experimental data"))
        self.label_Norm_fit.setText(_translate("MainWindow", "<html><head/><body><p>N<span style=\" vertical-align:sub;\">R</span> = </p></body></html>"))
        self.label_pm_1.setText(_translate("MainWindow", "±"))
        self.label_pm_2.setText(_translate("MainWindow", "±"))
        self.label_DR_fit.setText(_translate("MainWindow", "<html><head/><body><p>R<span style=\" vertical-align:sub;\">0</span> = </p></body></html>"))
        self.label_pm_3.setText(_translate("MainWindow", "±"))
        self.label_DE_fit.setText(_translate("MainWindow", "<html><head/><body><p>δhν =</p></body></html>"))
        self.label_pm_4.setText(_translate("MainWindow", "±"))
        self.label_5.setText(_translate("MainWindow", "Initial values"))
        self.QTextEdit_FitResult_Refl.setToolTip(_translate("MainWindow", "Reflectivity fit log"))
        self.label_2.setText(_translate("MainWindow", "="))
        self.label_refl_RSquared.setText(_translate("MainWindow", "R²"))
        self.label_22.setText(_translate("MainWindow", "="))
        self.label_sigma_fit.setText(_translate("MainWindow", "σ = "))
        self.doubleSpinBox_ReflFit_InitVal_Sigma.setSuffix(_translate("MainWindow", " eV"))
        self.button_set_refl.setText(_translate("MainWindow", "&Reset"))
        self.doubleSpinBox_ReflFit_InitVal_DeltaE.setSuffix(_translate("MainWindow", " eV"))
        self.label_estimate_3.setText(_translate("MainWindow", "Fit result ± standard deviation"))
        self.button_fit_refl.setText(_translate("MainWindow", "&Fit reflectivity"))
        self.label_54.setText(_translate("MainWindow", "(σ = 0 eV)"))
        self.tab_Main.setTabText(self.tab_Main.indexOf(self.tab_Fit_Refl), _translate("MainWindow", "Fit reflectivity"))
        self.label_pol.setText(_translate("MainWindow", "?-polarization"))
        self.label_theta_p_2.setText(_translate("MainWindow", "<html><head/><body><p>φ<span style=\" vertical-align:super;\">e</span><span style=\" vertical-align:sub;\">j</span> = </p></body></html>"))
        self.doubleSpinBox_ndp_phi.setSuffix(_translate("MainWindow", " °"))
        self.label_4.setText(_translate("MainWindow", "<html><head/><body><p>P=</p></body></html>"))
        self.checkBox_ignore_MonteCarlo.setText(_translate("MainWindow", "Ignore Monte Carlo analysis"))
        self.label_pm_7.setText(_translate("MainWindow", "±"))
        self.label_estimate_2.setText(_translate("MainWindow", "Fit result ± statistical errors"))
        self.label_gamma.setText(_translate("MainWindow", "Fit γ="))
        self.label_37.setText(_translate("MainWindow", "<html><head/><body><p>Fit N<span style=\" vertical-align:sub;\">Y</span>=</p></body></html>"))
        self.pushButton_reset_initial_parameters.setText(_translate("MainWindow", "&Reset"))
        self.label_ey_RSquared.setText(_translate("MainWindow", "R²"))
        self.label_15.setText(_translate("MainWindow", "="))
        self.label_16.setText(_translate("MainWindow", "="))
        self.checkBox_display_manual_EY.setText(_translate("MainWindow", "Show initial values curve (red):"))
        self.label_9.setText(_translate("MainWindow", "="))
        self.label_10.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\">±</p></body></html>"))
        self.label_pm_9.setText(_translate("MainWindow", "±"))
        self.label_sr.setText(_translate("MainWindow", "<html><head/><body><p>Fit S<span style=\" vertical-align:sub;\">R</span>=</p></body></html>"))
        self.button_fit_ey.setText(_translate("MainWindow", "&Fit yield"))
        self.label_pm_10.setText(_translate("MainWindow", "±"))
        self.label_35.setText(_translate("MainWindow", "Tabulated γ:"))
        self.pushButton_exportGammaFile.setText(_translate("MainWindow", "Export"))
        self.label_36.setText(_translate("MainWindow", "Yield fit log:"))
        self.radioButton_EYinit_theo_gamma.setText(_translate("MainWindow", "Theo."))
        self.radioButton_EYinit_man_gamma.setText(_translate("MainWindow", "Man."))
        self.label_pm_8.setText(_translate("MainWindow", "±"))
        self.label_6.setText(_translate("MainWindow", "Initial values"))
        self.pushButton_saveToArgand.setText(_translate("MainWindow", "&Save and plot\n"
"in Argand"))
        self.pushButton_set_fitParam_for_manual.setText(_translate("MainWindow", "Fit results as\n"
"initial values"))
        self.label_sr_from_gamma.setText(_translate("MainWindow", "<html><head/><body><p>S<span style=\" vertical-align:sub;\">R</span>=</p></body></html>"))
        self.label_si.setText(_translate("MainWindow", "<html><head/><body><p>|S<span style=\" vertical-align:sub;\">I</span>| = </p></body></html>"))
        self.label_psi.setText(_translate("MainWindow", "Ψ = "))
        self.label_Q0.setText(_translate("MainWindow", "<html><head/><body><p>Q<span style=\" font-weight:600; vertical-align:sub;\">0</span>=</p></body></html>"))
        self.label_QH.setText(_translate("MainWindow", "<html><head/><body><p>Q<span style=\" font-weight:600; vertical-align:sub;\">H</span>=</p></body></html>"))
        self.label_sr_from_gamma_fitResult.setText(_translate("MainWindow", "<html><head/><body><p>S<span style=\" vertical-align:sub;\">R</span>=</p></body></html>"))
        self.label_si_fitResult.setText(_translate("MainWindow", "<html><head/><body><p>|S<span style=\" vertical-align:sub;\">I</span>| = </p></body></html>"))
        self.label_psi_fitResult.setText(_translate("MainWindow", "Ψ = "))
        self.label_Q0_fitResult.setText(_translate("MainWindow", "<html><head/><body><p>Q<span style=\" font-weight:600; vertical-align:sub;\">0</span>=</p></body></html>"))
        self.label_QH_fitResult.setText(_translate("MainWindow", "<html><head/><body><p>Q<span style=\" font-weight:600; vertical-align:sub;\">H</span>=</p></body></html>"))
        self.radioButton_EYinit_man_SR.setText(_translate("MainWindow", "Man."))
        self.label_44.setText(_translate("MainWindow", "<html><head/><body><p>Fit P<span style=\" vertical-align:sub;\">c</span>=</p></body></html>"))
        self.label_46.setText(_translate("MainWindow", "<html><head/><body><p>Fit F<span style=\" vertical-align:sub;\">c</span>=</p></body></html>"))
        self.doubleSpinBox_ndp_delta_p.setPrefix(_translate("MainWindow", "δp = "))
        self.doubleSpinBox_ndp_delta_d.setPrefix(_translate("MainWindow", "δd = "))
        self.label_delta.setText(_translate("MainWindow", "Δ = "))
        self.label_E_Bragg_2.setText(_translate("MainWindow", "<html><head/><body><p>E<span style=\" vertical-align:sub;\">Bragg</span>=</p></body></html>"))
        self.doubleSpinBox_ndp_EBragg.setSuffix(_translate("MainWindow", " eV"))
        self.label_E_Kin_2.setText(_translate("MainWindow", "<html><head/><body><p>E<span style=\" vertical-align:sub;\">Kin</span>=</p></body></html>"))
        self.doubleSpinBox_ndp_Ekin.setSuffix(_translate("MainWindow", " eV"))
        self.radioButton_DQ_approx.setText(_translate("MainWindow", "Dipole + Quadrupole approximation"))
        self.label_3.setText(_translate("MainWindow", "Element:"))
        self.label_21.setText(_translate("MainWindow", "Z ="))
        self.label_20.setText(_translate("MainWindow", "Subshell:"))
        self.comboBox_NonDipolar_Shells.setToolTip(_translate("MainWindow", "IMPORTANT: Non-dipolar parameter theory only valid for s-subshells!"))
        self.label_34.setText(_translate("MainWindow", "(only s is defined)"))
        self.radioButton_D_approx.setText(_translate("MainWindow", "Dipole approximation (γ=0)"))
        self.tab_Main.setTabText(self.tab_Main.indexOf(self.tab_Fit_EY), _translate("MainWindow", "Fit photoelectron yield"))
        self.pushButton_Argand_Remove.setText(_translate("MainWindow", "Remove"))
        self.checkBox_Argand_display_group_errorBars.setText(_translate("MainWindow", "Show gp error bars"))
        self.pushButton_Argand_AddGroup.setText(_translate("MainWindow", "&Add group"))
        self.checkBox_Argand_display_originVectors.setText(_translate("MainWindow", "Show gp vect."))
        self.label_23.setText(_translate("MainWindow", "A"))
        self.label_28.setText(_translate("MainWindow", "<html><head/><body><p>Fc =</p></body></html>"))
        self.label_24.setText(_translate("MainWindow", "B"))
        self.label_25.setText(_translate("MainWindow", "<html><head/><body><p>Pc =</p></body></html>"))
        self.label_26.setText(_translate("MainWindow", "n ="))
        self.checkBox_Argand_display_errorBars.setText(_translate("MainWindow", "Show all error bars"))
        self.checkBox_displayLabels.setText(_translate("MainWindow", "Show labels"))
        self.pushButton_GpBySlice.setToolTip(_translate("MainWindow", "This will regroup all the items from the selected groups. Grouping them by slice."))
        self.pushButton_GpBySlice.setText(_translate("MainWindow", "Group by slice"))
        self.pushButton_Argand_removeAll.setText(_translate("MainWindow", "Remove all"))
        self.pushButton_Argand_ManualValues.setText(_translate("MainWindow", "Add point &manually"))
        self.pushButton_Argand_AddDataset.setText(_translate("MainWindow", "Add &point from file"))
        self.label_liveFc.setText(_translate("MainWindow", "N/A"))
        self.pushButton_Argand_Save.setText(_translate("MainWindow", "&Save"))
        self.label_11.setText(_translate("MainWindow", "Nr. of Fc grid lines"))
        self.label_27.setText(_translate("MainWindow", "Cursor"))
        self.pushButton_refresh.setText(_translate("MainWindow", "Refresh"))
        self.label_livePc.setText(_translate("MainWindow", "N/A"))
        self.label_12.setText(_translate("MainWindow", "Nr. of Pc grid lines"))
        self.pushButton_Argand_Load.setText(_translate("MainWindow", "&Load"))
        self.treeWidget_Argand_List.setSortingEnabled(True)
        self.checkBox_splitVector.setText(_translate("MainWindow", "Split"))
        self.checkBox_symmetricSplit.setText(_translate("MainWindow", "symmetrize"))
        self.checkBox_ArgandList_editable.setText(_translate("MainWindow", "Editable list"))
        self.checkBox_SortOnOff.setText(_translate("MainWindow", "Sortable list"))
        self.tab_Main.setTabText(self.tab_Main.indexOf(self.tab_Argand), _translate("MainWindow", "Argand diagram"))
        self.label_geometry.setText(_translate("MainWindow", "Geometry image"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page_3), _translate("MainWindow", "Geometry"))
        self.textEdit_aboutTxt.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Noto Sans\'; font-size:12pt; font-weight:400; font-style:italic;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">Torricelli is a software to analyze XSW (X-ray Standing Wave) data</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Sans Serif\'; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">    Copyright </span><span style=\" font-family:\'Sans Serif\'; font-style:normal;\">©</span><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\"> 2010-2013  Giuseppe Mercurio</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">    Copyright </span><span style=\" font-family:\'Sans Serif\'; font-style:normal;\">©</span><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\"> 2013-2020  François C. Bocquet</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">    Copyright </span><span style=\" font-family:\'Sans Serif\'; font-style:normal;\">©</span><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\"> 2014-2018  Markus Franke</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">    Copyright </span><span style=\" font-family:\'Sans Serif\'; font-style:normal;\">©</span><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\"> 2019       Xiaosheng Yang</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">    Torricelli is free software: you can redistribute it and/or modify</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">    it under the terms of the GNU General Public License as published by</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">    the Free Software Foundation, either version 3 of the License, or</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">    any later version.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">    Torricelli is distributed in the hope that it will be useful,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">    GNU General Public License for more details.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">    You should have received a copy of the GNU General Public License</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">    along with this program (see below).  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">Contact Information:<br />Peter Grünberg Institut (PGI-3)<br />Forschungszentrum Juelich GmbH<br />Leo Brandt Strasse, 52425 Juelich, Germany<br />www.fz-juelich.de</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">Tel.: +49 2461 61-3987<br />Fax.: +49 2461 61-3907</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-style:normal;\">Email:<br />giuseppe.mercurio@desy.de<br />f.bocquet@fz-juelich.de</span></p></body></html>"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page), _translate("MainWindow", "About Torricelli"))
        self.textEdit_licenseTxt.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Noto Sans\'; font-size:12pt; font-weight:400; font-style:italic;\">\n"
"<p style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">                     GNU GENERAL PUBLIC LICENSE</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">                       Version 3, 29 June 2007</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"> Copyright (C) 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"> Everyone is permitted to copy and distribute verbatim copies</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"> of this license document, but changing it is not allowed.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">                            Preamble</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  The GNU General Public License is a free, copyleft license for</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">software and other kinds of works.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  The licenses for most software and other practical works are designed</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">to take away your freedom to share and change the works.  By contrast,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">the GNU General Public License is intended to guarantee your freedom to</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">share and change all versions of a program--to make sure it remains free</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">software for all its users.  We, the Free Software Foundation, use the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">GNU General Public License for most of our software; it applies also to</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">any other work released this way by its authors.  You can apply it to</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">your programs, too.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  When we speak of free software, we are referring to freedom, not</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">price.  Our General Public Licenses are designed to make sure that you</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">have the freedom to distribute copies of free software (and charge for</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">them if you wish), that you receive source code or can get it if you</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">want it, that you can change the software or use pieces of it in new</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">free programs, and that you know you can do these things.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  To protect your rights, we need to prevent others from denying you</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">these rights or asking you to surrender the rights.  Therefore, you have</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">certain responsibilities if you distribute copies of the software, or if</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">you modify it: responsibilities to respect the freedom of others.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  For example, if you distribute copies of such a program, whether</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">gratis or for a fee, you must pass on to the recipients the same</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">freedoms that you received.  You must make sure that they, too, receive</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">or can get the source code.  And you must show them these terms so they</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">know their rights.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  Developers that use the GNU GPL protect your rights with two steps:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">(1) assert copyright on the software, and (2) offer you this License</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">giving you legal permission to copy, distribute and/or modify it.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  For the developers\' and authors\' protection, the GPL clearly explains</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">that there is no warranty for this free software.  For both users\' and</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">authors\' sake, the GPL requires that modified versions be marked as</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">changed, so that their problems will not be attributed erroneously to</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">authors of previous versions.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  Some devices are designed to deny users access to install or run</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">modified versions of the software inside them, although the manufacturer</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">can do so.  This is fundamentally incompatible with the aim of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">protecting users\' freedom to change the software.  The systematic</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">pattern of such abuse occurs in the area of products for individuals to</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">use, which is precisely where it is most unacceptable.  Therefore, we</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">have designed this version of the GPL to prohibit the practice for those</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">products.  If such problems arise substantially in other domains, we</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">stand ready to extend this provision to those domains in future versions</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">of the GPL, as needed to protect the freedom of users.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  Finally, every program is threatened constantly by software patents.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">States should not allow patents to restrict development and use of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">software on general-purpose computers, but in those that do, we wish to</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">avoid the special danger that patents applied to a free program could</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">make it effectively proprietary.  To prevent this, the GPL assures that</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">patents cannot be used to render the program non-free.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  The precise terms and conditions for copying, distribution and</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">modification follow.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">                       TERMS AND CONDITIONS</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  0. Definitions.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  &quot;This License&quot; refers to version 3 of the GNU General Public License.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  &quot;Copyright&quot; also means copyright-like laws that apply to other kinds of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">works, such as semiconductor masks.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  &quot;The Program&quot; refers to any copyrightable work licensed under this</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">License.  Each licensee is addressed as &quot;you&quot;.  &quot;Licensees&quot; and</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">&quot;recipients&quot; may be individuals or organizations.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  To &quot;modify&quot; a work means to copy from or adapt all or part of the work</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">in a fashion requiring copyright permission, other than the making of an</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">exact copy.  The resulting work is called a &quot;modified version&quot; of the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">earlier work or a work &quot;based on&quot; the earlier work.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  A &quot;covered work&quot; means either the unmodified Program or a work based</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">on the Program.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  To &quot;propagate&quot; a work means to do anything with it that, without</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">permission, would make you directly or secondarily liable for</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">infringement under applicable copyright law, except executing it on a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">computer or modifying a private copy.  Propagation includes copying,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">distribution (with or without modification), making available to the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">public, and in some countries other activities as well.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  To &quot;convey&quot; a work means any kind of propagation that enables other</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">parties to make or receive copies.  Mere interaction with a user through</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">a computer network, with no transfer of a copy, is not conveying.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  An interactive user interface displays &quot;Appropriate Legal Notices&quot;</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">to the extent that it includes a convenient and prominently visible</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">feature that (1) displays an appropriate copyright notice, and (2)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">tells the user that there is no warranty for the work (except to the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">extent that warranties are provided), that licensees may convey the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">work under this License, and how to view a copy of this License.  If</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">the interface presents a list of user commands or options, such as a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">menu, a prominent item in the list meets this criterion.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  1. Source Code.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  The &quot;source code&quot; for a work means the preferred form of the work</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">for making modifications to it.  &quot;Object code&quot; means any non-source</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">form of a work.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  A &quot;Standard Interface&quot; means an interface that either is an official</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">standard defined by a recognized standards body, or, in the case of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">interfaces specified for a particular programming language, one that</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">is widely used among developers working in that language.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  The &quot;System Libraries&quot; of an executable work include anything, other</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">than the work as a whole, that (a) is included in the normal form of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">packaging a Major Component, but which is not part of that Major</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">Component, and (b) serves only to enable use of the work with that</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">Major Component, or to implement a Standard Interface for which an</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">implementation is available to the public in source code form.  A</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">&quot;Major Component&quot;, in this context, means a major essential component</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">(kernel, window system, and so on) of the specific operating system</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">(if any) on which the executable work runs, or a compiler used to</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">produce the work, or an object code interpreter used to run it.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  The &quot;Corresponding Source&quot; for a work in object code form means all</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">the source code needed to generate, install, and (for an executable</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">work) run the object code and to modify the work, including scripts to</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">control those activities.  However, it does not include the work\'s</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">System Libraries, or general-purpose tools or generally available free</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">programs which are used unmodified in performing those activities but</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">which are not part of the work.  For example, Corresponding Source</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">includes interface definition files associated with source files for</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">the work, and the source code for shared libraries and dynamically</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">linked subprograms that the work is specifically designed to require,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">such as by intimate data communication or control flow between those</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">subprograms and other parts of the work.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  The Corresponding Source need not include anything that users</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">can regenerate automatically from other parts of the Corresponding</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">Source.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  The Corresponding Source for a work in source code form is that</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">same work.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  2. Basic Permissions.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  All rights granted under this License are granted for the term of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">copyright on the Program, and are irrevocable provided the stated</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">conditions are met.  This License explicitly affirms your unlimited</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">permission to run the unmodified Program.  The output from running a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">covered work is covered by this License only if the output, given its</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">content, constitutes a covered work.  This License acknowledges your</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">rights of fair use or other equivalent, as provided by copyright law.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  You may make, run and propagate covered works that you do not</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">convey, without conditions so long as your license otherwise remains</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">in force.  You may convey covered works to others for the sole purpose</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">of having them make modifications exclusively for you, or provide you</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">with facilities for running those works, provided that you comply with</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">the terms of this License in conveying all material for which you do</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">not control copyright.  Those thus making or running the covered works</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">for you must do so exclusively on your behalf, under your direction</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">and control, on terms that prohibit them from making any copies of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">your copyrighted material outside their relationship with you.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  Conveying under any other circumstances is permitted solely under</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">the conditions stated below.  Sublicensing is not allowed; section 10</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">makes it unnecessary.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  3. Protecting Users\' Legal Rights From Anti-Circumvention Law.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  No covered work shall be deemed part of an effective technological</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">measure under any applicable law fulfilling obligations under article</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">11 of the WIPO copyright treaty adopted on 20 December 1996, or</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">similar laws prohibiting or restricting circumvention of such</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">measures.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  When you convey a covered work, you waive any legal power to forbid</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">circumvention of technological measures to the extent such circumvention</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">is effected by exercising rights under this License with respect to</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">the covered work, and you disclaim any intention to limit operation or</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">modification of the work as a means of enforcing, against the work\'s</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">users, your or third parties\' legal rights to forbid circumvention of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">technological measures.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  4. Conveying Verbatim Copies.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  You may convey verbatim copies of the Program\'s source code as you</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">receive it, in any medium, provided that you conspicuously and</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">appropriately publish on each copy an appropriate copyright notice;</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">keep intact all notices stating that this License and any</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">non-permissive terms added in accord with section 7 apply to the code;</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">keep intact all notices of the absence of any warranty; and give all</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">recipients a copy of this License along with the Program.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  You may charge any price or no price for each copy that you convey,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">and you may offer support or warranty protection for a fee.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  5. Conveying Modified Source Versions.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  You may convey a work based on the Program, or the modifications to</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">produce it from the Program, in the form of source code under the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">terms of section 4, provided that you also meet all of these conditions:</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    a) The work must carry prominent notices stating that you modified</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    it, and giving a relevant date.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    b) The work must carry prominent notices stating that it is</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    released under this License and any conditions added under section</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    7.  This requirement modifies the requirement in section 4 to</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    &quot;keep intact all notices&quot;.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    c) You must license the entire work, as a whole, under this</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    License to anyone who comes into possession of a copy.  This</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    License will therefore apply, along with any applicable section 7</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    additional terms, to the whole of the work, and all its parts,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    regardless of how they are packaged.  This License gives no</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    permission to license the work in any other way, but it does not</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    invalidate such permission if you have separately received it.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    d) If the work has interactive user interfaces, each must display</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    Appropriate Legal Notices; however, if the Program has interactive</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    interfaces that do not display Appropriate Legal Notices, your</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    work need not make them do so.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  A compilation of a covered work with other separate and independent</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">works, which are not by their nature extensions of the covered work,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">and which are not combined with it such as to form a larger program,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">in or on a volume of a storage or distribution medium, is called an</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">&quot;aggregate&quot; if the compilation and its resulting copyright are not</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">used to limit the access or legal rights of the compilation\'s users</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">beyond what the individual works permit.  Inclusion of a covered work</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">in an aggregate does not cause this License to apply to the other</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">parts of the aggregate.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  6. Conveying Non-Source Forms.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  You may convey a covered work in object code form under the terms</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">of sections 4 and 5, provided that you also convey the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">machine-readable Corresponding Source under the terms of this License,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">in one of these ways:</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    a) Convey the object code in, or embodied in, a physical product</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    (including a physical distribution medium), accompanied by the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    Corresponding Source fixed on a durable physical medium</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    customarily used for software interchange.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    b) Convey the object code in, or embodied in, a physical product</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    (including a physical distribution medium), accompanied by a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    written offer, valid for at least three years and valid for as</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    long as you offer spare parts or customer support for that product</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    model, to give anyone who possesses the object code either (1) a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    copy of the Corresponding Source for all the software in the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    product that is covered by this License, on a durable physical</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    medium customarily used for software interchange, for a price no</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    more than your reasonable cost of physically performing this</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    conveying of source, or (2) access to copy the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    Corresponding Source from a network server at no charge.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    c) Convey individual copies of the object code with a copy of the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    written offer to provide the Corresponding Source.  This</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    alternative is allowed only occasionally and noncommercially, and</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    only if you received the object code with such an offer, in accord</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    with subsection 6b.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    d) Convey the object code by offering access from a designated</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    place (gratis or for a charge), and offer equivalent access to the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    Corresponding Source in the same way through the same place at no</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    further charge.  You need not require recipients to copy the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    Corresponding Source along with the object code.  If the place to</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    copy the object code is a network server, the Corresponding Source</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    may be on a different server (operated by you or a third party)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    that supports equivalent copying facilities, provided you maintain</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    clear directions next to the object code saying where to find the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    Corresponding Source.  Regardless of what server hosts the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    Corresponding Source, you remain obligated to ensure that it is</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    available for as long as needed to satisfy these requirements.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    e) Convey the object code using peer-to-peer transmission, provided</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    you inform other peers where the object code and Corresponding</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    Source of the work are being offered to the general public at no</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    charge under subsection 6d.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  A separable portion of the object code, whose source code is excluded</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">from the Corresponding Source as a System Library, need not be</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">included in conveying the object code work.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  A &quot;User Product&quot; is either (1) a &quot;consumer product&quot;, which means any</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">tangible personal property which is normally used for personal, family,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">or household purposes, or (2) anything designed or sold for incorporation</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">into a dwelling.  In determining whether a product is a consumer product,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">doubtful cases shall be resolved in favor of coverage.  For a particular</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">product received by a particular user, &quot;normally used&quot; refers to a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">typical or common use of that class of product, regardless of the status</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">of the particular user or of the way in which the particular user</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">actually uses, or expects or is expected to use, the product.  A product</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">is a consumer product regardless of whether the product has substantial</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">commercial, industrial or non-consumer uses, unless such uses represent</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">the only significant mode of use of the product.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  &quot;Installation Information&quot; for a User Product means any methods,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">procedures, authorization keys, or other information required to install</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">and execute modified versions of a covered work in that User Product from</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">a modified version of its Corresponding Source.  The information must</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">suffice to ensure that the continued functioning of the modified object</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">code is in no case prevented or interfered with solely because</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">modification has been made.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  If you convey an object code work under this section in, or with, or</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">specifically for use in, a User Product, and the conveying occurs as</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">part of a transaction in which the right of possession and use of the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">User Product is transferred to the recipient in perpetuity or for a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">fixed term (regardless of how the transaction is characterized), the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">Corresponding Source conveyed under this section must be accompanied</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">by the Installation Information.  But this requirement does not apply</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">if neither you nor any third party retains the ability to install</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">modified object code on the User Product (for example, the work has</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">been installed in ROM).</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  The requirement to provide Installation Information does not include a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">requirement to continue to provide support service, warranty, or updates</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">for a work that has been modified or installed by the recipient, or for</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">the User Product in which it has been modified or installed.  Access to a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">network may be denied when the modification itself materially and</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">adversely affects the operation of the network or violates the rules and</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">protocols for communication across the network.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  Corresponding Source conveyed, and Installation Information provided,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">in accord with this section must be in a format that is publicly</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">documented (and with an implementation available to the public in</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">source code form), and must require no special password or key for</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">unpacking, reading or copying.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  7. Additional Terms.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  &quot;Additional permissions&quot; are terms that supplement the terms of this</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">License by making exceptions from one or more of its conditions.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">Additional permissions that are applicable to the entire Program shall</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">be treated as though they were included in this License, to the extent</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">that they are valid under applicable law.  If additional permissions</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">apply only to part of the Program, that part may be used separately</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">under those permissions, but the entire Program remains governed by</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">this License without regard to the additional permissions.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  When you convey a copy of a covered work, you may at your option</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">remove any additional permissions from that copy, or from any part of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">it.  (Additional permissions may be written to require their own</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">removal in certain cases when you modify the work.)  You may place</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">additional permissions on material, added by you to a covered work,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">for which you have or can give appropriate copyright permission.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  Notwithstanding any other provision of this License, for material you</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">add to a covered work, you may (if authorized by the copyright holders of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">that material) supplement the terms of this License with terms:</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    a) Disclaiming warranty or limiting liability differently from the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    terms of sections 15 and 16 of this License; or</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    b) Requiring preservation of specified reasonable legal notices or</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    author attributions in that material or in the Appropriate Legal</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    Notices displayed by works containing it; or</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    c) Prohibiting misrepresentation of the origin of that material, or</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    requiring that modified versions of such material be marked in</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    reasonable ways as different from the original version; or</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    d) Limiting the use for publicity purposes of names of licensors or</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    authors of the material; or</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    e) Declining to grant rights under trademark law for use of some</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    trade names, trademarks, or service marks; or</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    f) Requiring indemnification of licensors and authors of that</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    material by anyone who conveys the material (or modified versions of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    it) with contractual assumptions of liability to the recipient, for</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    any liability that these contractual assumptions directly impose on</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">    those licensors and authors.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  All other non-permissive additional terms are considered &quot;further</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">restrictions&quot; within the meaning of section 10.  If the Program as you</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">received it, or any part of it, contains a notice stating that it is</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">governed by this License along with a term that is a further</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">restriction, you may remove that term.  If a license document contains</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">a further restriction but permits relicensing or conveying under this</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">License, you may add to a covered work material governed by the terms</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">of that license document, provided that the further restriction does</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">not survive such relicensing or conveying.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  If you add terms to a covered work in accord with this section, you</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">must place, in the relevant source files, a statement of the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">additional terms that apply to those files, or a notice indicating</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">where to find the applicable terms.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  Additional terms, permissive or non-permissive, may be stated in the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">form of a separately written license, or stated as exceptions;</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">the above requirements apply either way.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  8. Termination.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  You may not propagate or modify a covered work except as expressly</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">provided under this License.  Any attempt otherwise to propagate or</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">modify it is void, and will automatically terminate your rights under</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">this License (including any patent licenses granted under the third</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">paragraph of section 11).</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  However, if you cease all violation of this License, then your</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">license from a particular copyright holder is reinstated (a)</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">provisionally, unless and until the copyright holder explicitly and</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">finally terminates your license, and (b) permanently, if the copyright</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">holder fails to notify you of the violation by some reasonable means</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">prior to 60 days after the cessation.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  Moreover, your license from a particular copyright holder is</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">reinstated permanently if the copyright holder notifies you of the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">violation by some reasonable means, this is the first time you have</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">received notice of violation of this License (for any work) from that</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">copyright holder, and you cure the violation prior to 30 days after</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">your receipt of the notice.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  Termination of your rights under this section does not terminate the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">licenses of parties who have received copies or rights from you under</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">this License.  If your rights have been terminated and not permanently</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">reinstated, you do not qualify to receive new licenses for the same</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">material under section 10.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  9. Acceptance Not Required for Having Copies.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  You are not required to accept this License in order to receive or</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">run a copy of the Program.  Ancillary propagation of a covered work</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">occurring solely as a consequence of using peer-to-peer transmission</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">to receive a copy likewise does not require acceptance.  However,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">nothing other than this License grants you permission to propagate or</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">modify any covered work.  These actions infringe copyright if you do</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">not accept this License.  Therefore, by modifying or propagating a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">covered work, you indicate your acceptance of this License to do so.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  10. Automatic Licensing of Downstream Recipients.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  Each time you convey a covered work, the recipient automatically</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">receives a license from the original licensors, to run, modify and</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">propagate that work, subject to this License.  You are not responsible</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">for enforcing compliance by third parties with this License.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  An &quot;entity transaction&quot; is a transaction transferring control of an</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">organization, or substantially all assets of one, or subdividing an</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">organization, or merging organizations.  If propagation of a covered</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">work results from an entity transaction, each party to that</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">transaction who receives a copy of the work also receives whatever</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">licenses to the work the party\'s predecessor in interest had or could</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">give under the previous paragraph, plus a right to possession of the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">Corresponding Source of the work from the predecessor in interest, if</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">the predecessor has it or can get it with reasonable efforts.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  You may not impose any further restrictions on the exercise of the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">rights granted or affirmed under this License.  For example, you may</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">not impose a license fee, royalty, or other charge for exercise of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">rights granted under this License, and you may not initiate litigation</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">(including a cross-claim or counterclaim in a lawsuit) alleging that</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">any patent claim is infringed by making, using, selling, offering for</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">sale, or importing the Program or any portion of it.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  11. Patents.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  A &quot;contributor&quot; is a copyright holder who authorizes use under this</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">License of the Program or a work on which the Program is based.  The</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">work thus licensed is called the contributor\'s &quot;contributor version&quot;.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  A contributor\'s &quot;essential patent claims&quot; are all patent claims</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">owned or controlled by the contributor, whether already acquired or</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">hereafter acquired, that would be infringed by some manner, permitted</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">by this License, of making, using, or selling its contributor version,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">but do not include claims that would be infringed only as a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">consequence of further modification of the contributor version.  For</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">purposes of this definition, &quot;control&quot; includes the right to grant</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">patent sublicenses in a manner consistent with the requirements of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">this License.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  Each contributor grants you a non-exclusive, worldwide, royalty-free</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">patent license under the contributor\'s essential patent claims, to</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">make, use, sell, offer for sale, import and otherwise run, modify and</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">propagate the contents of its contributor version.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  In the following three paragraphs, a &quot;patent license&quot; is any express</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">agreement or commitment, however denominated, not to enforce a patent</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">(such as an express permission to practice a patent or covenant not to</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">sue for patent infringement).  To &quot;grant&quot; such a patent license to a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">party means to make such an agreement or commitment not to enforce a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">patent against the party.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  If you convey a covered work, knowingly relying on a patent license,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">and the Corresponding Source of the work is not available for anyone</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">to copy, free of charge and under the terms of this License, through a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">publicly available network server or other readily accessible means,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">then you must either (1) cause the Corresponding Source to be so</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">available, or (2) arrange to deprive yourself of the benefit of the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">patent license for this particular work, or (3) arrange, in a manner</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">consistent with the requirements of this License, to extend the patent</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">license to downstream recipients.  &quot;Knowingly relying&quot; means you have</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">actual knowledge that, but for the patent license, your conveying the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">covered work in a country, or your recipient\'s use of the covered work</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">in a country, would infringe one or more identifiable patents in that</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">country that you have reason to believe are valid.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  If, pursuant to or in connection with a single transaction or</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">arrangement, you convey, or propagate by procuring conveyance of, a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">covered work, and grant a patent license to some of the parties</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">receiving the covered work authorizing them to use, propagate, modify</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">or convey a specific copy of the covered work, then the patent license</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">you grant is automatically extended to all recipients of the covered</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">work and works based on it.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  A patent license is &quot;discriminatory&quot; if it does not include within</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">the scope of its coverage, prohibits the exercise of, or is</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">conditioned on the non-exercise of one or more of the rights that are</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">specifically granted under this License.  You may not convey a covered</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">work if you are a party to an arrangement with a third party that is</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">in the business of distributing software, under which you make payment</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">to the third party based on the extent of your activity of conveying</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">the work, and under which the third party grants, to any of the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">parties who would receive the covered work from you, a discriminatory</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">patent license (a) in connection with copies of the covered work</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">conveyed by you (or copies made from those copies), or (b) primarily</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">for and in connection with specific products or compilations that</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">contain the covered work, unless you entered into that arrangement,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">or that patent license was granted, prior to 28 March 2007.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  Nothing in this License shall be construed as excluding or limiting</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">any implied license or other defenses to infringement that may</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">otherwise be available to you under applicable patent law.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  12. No Surrender of Others\' Freedom.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  If conditions are imposed on you (whether by court order, agreement or</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">otherwise) that contradict the conditions of this License, they do not</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">excuse you from the conditions of this License.  If you cannot convey a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">covered work so as to satisfy simultaneously your obligations under this</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">License and any other pertinent obligations, then as a consequence you may</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">not convey it at all.  For example, if you agree to terms that obligate you</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">to collect a royalty for further conveying from those to whom you convey</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">the Program, the only way you could satisfy both those terms and this</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">License would be to refrain entirely from conveying the Program.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  13. Use with the GNU Affero General Public License.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  Notwithstanding any other provision of this License, you have</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">permission to link or combine any covered work with a work licensed</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">under version 3 of the GNU Affero General Public License into a single</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">combined work, and to convey the resulting work.  The terms of this</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">License will continue to apply to the part which is the covered work,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">but the special requirements of the GNU Affero General Public License,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">section 13, concerning interaction through a network will apply to the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">combination as such.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  14. Revised Versions of this License.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  The Free Software Foundation may publish revised and/or new versions of</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">the GNU General Public License from time to time.  Such new versions will</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">be similar in spirit to the present version, but may differ in detail to</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">address new problems or concerns.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  Each version is given a distinguishing version number.  If the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">Program specifies that a certain numbered version of the GNU General</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">Public License &quot;or any later version&quot; applies to it, you have the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">option of following the terms and conditions either of that numbered</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">version or of any later version published by the Free Software</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">Foundation.  If the Program does not specify a version number of the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">GNU General Public License, you may choose any version ever published</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">by the Free Software Foundation.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  If the Program specifies that a proxy can decide which future</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">versions of the GNU General Public License can be used, that proxy\'s</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">public statement of acceptance of a version permanently authorizes you</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">to choose that version for the Program.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  Later license versions may give you additional or different</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">permissions.  However, no additional obligations are imposed on any</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">author or copyright holder as a result of your choosing to follow a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">later version.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  15. Disclaimer of Warranty.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM &quot;AS IS&quot; WITHOUT WARRANTY</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  16. Limitation of Liability.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">SUCH DAMAGES.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  17. Interpretation of Sections 15 and 16.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">  If the disclaimer of warranty and limitation of liability provided</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">above cannot be given local legal effect according to their terms,</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">reviewing courts shall apply local law that most closely approximates</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">an absolute waiver of all civil liability in connection with the</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">Program, unless a warranty or assumption of liability accompanies a</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">copy of the Program in return for a fee.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Courier New,courier\'; font-size:10pt; font-style:normal;\">                     END OF TERMS AND CONDITIONS</span></p></body></html>"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), _translate("MainWindow", "GPL General Public License"))
        self.tab_Main.setTabText(self.tab_Main.indexOf(self.tab_AboutLicense), _translate("MainWindow", "Geometry, About, License"))
        self.actionQuit.setText(_translate("MainWindow", "Close"))

